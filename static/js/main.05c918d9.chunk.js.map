{"version":3,"sources":["fireBase.js","contexts/AuthContext.js","components/structure/AppNavBar.js","components/landing/Landing.js","components/landing/Legal.js","components/landing/Cookie.js","components/landing/Support.js","components/landing/TermConditions.js","components/landing/About.js","components/landing/Contact.js","components/structure/Footer.js","components/login/SignIn.js","components/login/SignUp.js","components/login/ForgotPassword.js","components/registrationPage/RegistrationPage.js","components/volunteerTask/TaskDetail.js","components/volunteerTask/Notification.js","components/volunteerTask/CofirmDialog.js","components/volunteerTask/TaskListTable.js","components/volunteerTask/VolunteerSearchTask.js","components/volunteerTask/TaskListData.js","components/task/NewTaskForm.js","components/task/TaskTable.js","components/task/AddTask.js","components/task/tasksDataOnly.js","components/volunteerTask/VolunteerWelcomePage.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","signout","signOut","resetPassword","sendPasswordResetEmail","Provider","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","title","appBar","backgroundColor","HomeIcon","props","SvgIcon","d","AppNavBar","classes","setAuth","anchorEl","setAnchorEl","console","log","open","Boolean","history","useHistory","handleClose","a","push","alert","className","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","aria-label","label","AppBar","position","Toolbar","color","fontSize","onClick","window","location","href","Typography","variant","Button","component","Link","to","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","button","pInfo","textAlign","divContentWrapper","minHeight","paddingLeft","Landing","Legal","Cookie","Support","TermConditions","About","Grid","container","direction","alignItems","item","xs","Contact","footer","boxSizing","height","padding","borderTop","width","Footer","Copyright","align","Date","getFullYear","paper","marginTop","display","flexDirection","avatar","palette","secondary","main","form","submit","SignIn","useParams","userType","emailRef","useRef","passwordRef","error","setError","nameLabel","e","preventDefault","current","Container","maxWidth","CssBaseline","Avatar","Alert","severity","AlertTitle","onSubmit","TextField","required","fullWidth","type","inputRef","autoFocus","Checkbox","disabled","Box","mt","Signup","passwordConfirmRef","ForgotPassword","message","setMessage","textFld","border","fontWeight","marginLeft","RegistrationPage","initialInputState","firstName","lastName","DateOfBirth","postcode","address1","address2","city","county","formData","setFormData","handleChange","name","Fragment","flex-start","style","evt","sm","autoComplete","InputLabelProps","shrink","ButtonGroup","TaskDialog","data","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","DialogContent","noValidate","taskType","taskSummary","multiline","rows","DialogActions","top","Notification","notify","setNotify","reason","isOpen","Snackbar","autoHideDuration","dailog","dailogContent","dailogAction","justifyContent","ConfirmDialog","confirmDialog","setConfirmDialog","subTitle","size","minWidth","onConfirm","options","filterType","selectableRows","selectableRowsOnClick","rowsPerPage","rowsPerPageOptions","createMuiTheme","overrides","MuiDataTable","responsiveScroll","maxHeight","MUIDataTableBodyCell","TaskListTable","taskListData","columnFields","columns","SPACED_DATE_FORMAT","h5","intialTasks","date","distance","volId","VolunteerSearchTask","pendingTasks","setPendingTasks","myTasks","filter","task","unassignedTasks","showDialog","setShowDialog","dialogData","setDialogData","notifyMsg","setNotifyMsg","handleClickOpen","myTaskCols","sort","viewColumns","customBodyRender","tableMeta","updateValue","rowData","moment","format","returnTask","map","selectedTask","find","unassignedTaskCols","assignTask","p","FormDialog","addTask","getFormDate","getMonth","toString","padStart","getDate","useForm","defaultValues","taskDetails","startDate","startTime","endDate","endTime","mode","register","handleSubmit","reset","errors","watch","setValue","clearErrors","resetAndClose","watchAll","reqFieldMsg","start","end","includes","helperText","inputProps","min","hasOwnProperty","validate","setMinutes","getMinutes","count","TaskTable","taskList","h1","largeButton","largeIcon","icon","marginBottom","AddTask","status","setTaskList","nextId","showAddDialog","setShowAddDialog","setTaskType","NewTaskForm","newTask","updatedTaskList","VolunteerWelcome","PrivateRoute","Component","rest","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05c918d9.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY ,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../fireBase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function signout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n//   function updateEmail(email) {\r\n//     return currentUser.updateEmail(email)\r\n//   }\r\n\r\n//   function updatePassword(password) {\r\n//     return currentUser.updatePassword(password)\r\n//   }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    signout,\r\n    resetPassword,\r\n    //updateEmail,\r\n    //updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    MenuItem,\r\n    Menu,\r\n    SvgIcon,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& > svg\": {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        backgroundColor: \"#9370db\",\r\n    },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n        </SvgIcon>\r\n    );\r\n} /*For HomeIcons */\r\n\r\nconst AppNavBar = () => {\r\n    const classes = useStyles();\r\n    const { currentUser, signout } = useAuth();\r\n    const [auth, setAuth] = React.useState(false); // React.useState(currentUser === null ? false : true); //change to true\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setAuth(currentUser === null ? false : true);\r\n    }, [currentUser]);\r\n  \r\n     console.log(currentUser );\r\n     console.log(\"auth\" + auth);\r\n    const open = Boolean(anchorEl);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    async function handleSignOut() {\r\n        try {\r\n            await signout();\r\n            setAuth(false);\r\n            history.push(\"/HelpWhoNeeds\");\r\n        } catch (error) {\r\n            setAuth(currentUser === null ? false : true);\r\n            console.log(error);\r\n            alert(\"failed to log out\");\r\n        }\r\n\r\n        console.log(\"auth\" + auth);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={auth}\r\n                            onChange={handleChange}\r\n                            aria-label=\"login switch\"\r\n                        />\r\n                    }\r\n                    label={auth ? \"Logout\" : \"Login\"}\r\n                />\r\n            </FormGroup>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                   <HomeIcon\r\n                        color=\"action\"\r\n                        fontSize=\"large\"\r\n                        onClick={(event) => (window.location.href = \"/HelpWhoNeeds/\")}\r\n                    />\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Help Who Needs\r\n          </Typography>\r\n\r\n                    <Button color=\"inherit\" component={Link} to={\"/about\"}>\r\n                        About\r\n          </Button>\r\n                    <Button color=\"inherit\" component={Link} to={\"/contact\"}>\r\n                        Contact\r\n          </Button>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                                <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppNavBar;\r\n","import { Link, useHistory } from \"react-router-dom\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\nconst Landing = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    const handleClick =() => { \r\n        (currentUser ? history.push(\"/myTask\") : history.push(\"/login/Volunteer\") )           \r\n    } \r\n    const handleUserClick =() => {\r\n         (currentUser ? history.push(\"/addTask\") : history.push(\"/login/AssistanceRequester\") )\r\n    }     \r\n      \r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n                <h1>Help Who Needs</h1>\r\n                <p>\r\n                    Our TechForGood project aims to match a volunteer with a vulnerable\r\n                    person who is shielding in these unprecedented times. Hence our\r\n                    application is called HelpWhoNeeds. The app will aim to match a\r\n                    volunteer with a vulnerable person in their immediate local area\r\n                    helping with chores such as shopping, GP visits, prescriptions, dog\r\n                    walking or just some social contact with the appropriate measures in\r\n                    place. We hope this app brings some comfort and relief to the users\r\n                    with a sense of moral and social obligation. \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> If you would like help or need any assistant using our system, please call <strong>0800 123 4567</strong>.</p>\r\n                <Button\r\n                    className= {classes.button}\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleUserClick}             \r\n                >\r\n                    I need Help\r\n                </Button>\r\n                \r\n                <Button\r\n                    className= {classes.button} \r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleClick} \r\n                >\r\n                    I can Help\r\n        </Button>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","\r\nconst Legal = () => (\r\n    <div>\r\n        <h1>This is the Legal Page</h1>\r\n        <p>\r\n        End-user privacy.\r\n        Intellectual property (IP) rights.\r\n        Advertising and promotions.\r\n        Users of this app must be 18 or over.\r\n\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Legal;\r\n","\r\nconst Cookie = () => (\r\n    <div>\r\n        <h1>This is the Cookie Page</h1>\r\n        <p>\r\n           Cookie Policy\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Cookie;","\r\nconst Support = () => (\r\n    <div>\r\n        <h1>This is the Support Page</h1>\r\n        <p>\r\n            Add the Support form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Support;","\r\nconst TermConditions = () => (\r\n    <div>\r\n        <h1>This is the Terms Page</h1>\r\n        <p>\r\n            Add the form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default TermConditions;\r\n","import { Link } from \"react-router-dom\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\n\r\nconst About = () =>  {\r\n\r\n\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n               <h1>YourTechAngels - Project HelpWhoNeeds</h1>\r\n        \r\n        <p>\r\n            Established in 2020, Your Tech Angels is a collaborative team of 4 engineers who are involved \r\n            and interested in technology.  Our aim is to use technology to help others especially during \r\n            the Covid 19 pandemic.\r\n            This is the motivation behind our HelpWhoNeeds project that assists the shielding population in \r\n            the UK with everyday assistance such as delivering groceries or prescriptions, dog walking or \r\n            even just a chat. The app we are building will help those who need to find a volunteer match in \r\n            their local areas - near their vicinity based on their post code during lockdown and other \r\n            times too.  \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> You can request Volunteer help 24x7 - <strong>0800 123 4567</strong></p>\r\n        \r\n   \r\n\r\n        <Grid container \r\n        \r\n              direction=\"row\"\r\n              alignItems=\"center\" spacing={3} >\r\n\r\n                  <Grid container item xs={2} spacing={3}>\r\n               <Link to={'/legal'} variant=\"body2\">\r\n                  Legal\r\n               </Link> </Grid>\r\n               \r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/cookie`} variant=\"body2\">\r\n                  Cookie\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/support`} variant=\"body2\">\r\n                  Support\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/termCondition`} variant=\"body2\">\r\n                  Terms Conditions\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/contact`} variant=\"body2\">\r\n                  Contact\r\n               </Link> </Grid>\r\n\r\n               </Grid>\r\n       \r\n                            \r\n                \r\n\r\n    </div>\r\n\r\n    )};\r\n\r\n\r\nexport default About;\r\n","\r\nconst Contact = () => (\r\n    <div>\r\n        <h1>This is the Contact Page</h1>\r\n        <p>\r\n            Add the Contact form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Contact;\r\n","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    footer:{\r\n        boxSizing: \"border-box\",\r\n        height: \"50px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#eee\",\r\n        borderTop: \"1px solid #e0e0e0\",       \r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n    },\r\n\r\n});\r\n\r\nfunction Footer(){\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <footer className= {classes.footer}>\r\n        <div>\r\n            Made by <a href=\"https://github.com/YourTechAngels\">YourTechAngels</a>\r\n        </div>\r\n        </footer>\r\n    )  \r\n}\r\n\r\n\r\nexport default Footer;","import React, { useState, useRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const param = useParams();\r\n    const user = param.userType;\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const nameLabel = (`${user}`==='AssistanceRequester'? 'Requestee': `${user}`)\r\n  \r\n    async function handleSubmit(e) {\r\n      e.preventDefault()\r\n  \r\n      try {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n\r\n        if (`${user}` === 'Volunteer')\r\n        { history.push(\"/myTask\");\r\n          console.log(process.env.PUBLIC_URL) }\r\n        else {\r\n            history.push(\"/addTask\") }\r\n        }\r\n     catch {\r\n        setError(\"Failed to log in\")\r\n      }\r\n  \r\n      setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                   {nameLabel} Sign in\r\n                </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"email\" \r\n                        inputRef={emailRef} \r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"password\" \r\n                        inputRef={passwordRef}\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled = {loading}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link to={`/forgotPassword/${user}`} variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            New User ?<Link to={`/signUp/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                     </Grid></Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const param = useParams();\r\n  const user = param.user;\r\n  \r\n\r\n    async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    console.log(emailRef.current.value,passwordRef.current.value, passwordConfirmRef.current.value)\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords does not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(`/registrationPage/${user}`)\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)  \r\n   \r\n}\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign Up\r\n           </Typography>\r\n           { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n           <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordRef}\r\n                    label=\"Password\"\r\n                    id=\"password\"\r\n                />\r\n                 <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordConfirmRef}\r\n                    label=\"Confirm Password\"\r\n                    id=\"passwordConfirm\"\r\n                />\r\n                        <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Sign Up\r\n                    </Button>\r\n              </form>\r\n              </div>  <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n  )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const classes = useStyles();  \r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const param = useParams();\r\n  const user = param.user;\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for password reset instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Forgot Password </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n            { message && <Alert severity=\"success\">\r\n            <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n            <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    // autoFocus\r\n                />\r\n                <Button            \r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Reset Password\r\n                </Button>\r\n              </form>\r\n             <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            Go to <Link to={`/login/${user}`} variant=\"body2\">\r\n                                Sign In</Link> \r\n                            </div>\r\n                        </Grid>\r\n              </Grid>\r\n              <Grid container>          \r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-3\">\r\n                            New User ?<Link to={`/signUp/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                       \r\n        </Grid>\r\n\r\n    </div>  <Box mt={8}>\r\n    <Copyright />\r\n</Box>\r\n</Container>\r\n)\r\n}","import React,{useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from \"@material-ui/core/Button\";\r\n// import AddressForm from './AddressForm';\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = {\r\n  textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n  button: {\r\n    border: '4px',\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    marginTop: '10px',\r\n  },\r\n  \r\n  };\r\n\r\n  export default function RegistrationPage(props) {\r\n\r\n    const initialInputState = { firstName : \"\" , lastName:\"\" , DateOfBirth:\"\", \r\n                                postcode:\"\", address1:\"\", address2:\"\", city:\"\" , county:\"\" }     \r\n    const [formData, setFormData] = useState({initialInputState})\r\n    const { firstName , lastName, DateOfBirth, postcode, address1, address2, city, county } = formData\r\n    const [message, setMessage] = useState(\"\")\r\n    \r\n\r\n    const handleChange= (e) => {\r\n      setFormData({...formData,[e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setMessage(\"Data has been saved successfully\")\r\n         \r\n      console.log(formData)\r\n      }\r\n      const param = useParams();\r\n      const user  = param.user;\r\n      \r\n      return (\r\n     \r\n   <React.Fragment>\r\n     \r\n      <h2 align=\"center\"> Registration form</h2>\r\n      { message && <Alert severity=\"success\">\r\n            <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n      <Grid container flex-start=\"left\" >\r\n      <p style={{paddingLeft:8}}>Please enter your details here</p> </Grid>\r\n     \r\n      <form onSubmit={handleSubmit} >      \r\n      <Grid container spacing={3} >\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            type =\"text\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            variant=\"outlined\"\r\n            onChange = { handleChange }\r\n            value= {firstName || ''}\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"given-name\"\r\n          />\r\n        </Grid>\r\n         <Grid item xs={12} sm={6} >\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            type =\"text\"\r\n            label=\"Last name\"\r\n            onChange = { handleChange }\r\n            value= {lastName || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"family-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"DateOfBirth\"\r\n            name=\"DateOfBirth\"\r\n            type= \"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            label=\"Date Of Birth\"\r\n            onChange = { handleChange }\r\n            value= {DateOfBirth || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={12}> \r\n        <ButtonGroup>     \r\n         <TextField\r\n            required\r\n            id=\"postcode\"\r\n            name=\"postcode\"\r\n            label=\"Post code\"\r\n            variant=\"outlined\"\r\n            onChange = { handleChange }\r\n            value= {postcode || ''}\r\n            style = {useStyles.textFld}\r\n            autoComplete=\" postal-code\"/>\r\n        \r\n          <Grid item xs={12} sm={6}>            \r\n\r\n            <Button variant=\"outlined\" className = \"btn btn-primary w-100\"  onClick={() => { console.log('Find Address button clicked') }}>Find Address</Button>\r\n\r\n        </Grid></ButtonGroup>  </Grid> \r\n   \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            onChange = { handleChange }\r\n            value= {address1 || ''}\r\n            label=\"Address line 1\"\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            variant=\"outlined\"\r\n            onChange = { handleChange }\r\n            value= {address2 || ''}\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            onChange = { handleChange }\r\n            value= {city || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n           id=\"county\" \r\n           name=\"county\"  \r\n           variant=\"outlined\" \r\n           onChange = { handleChange }\r\n           value= {county || ''}\r\n           style = {useStyles.textFld}\r\n           label=\"County\" />\r\n        </Grid>\r\n               \r\n        <Grid item xs={12}>\r\n         \r\n         { (`${user}` === 'Volunteer') && \r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" style = {{ marginLeft: '5px' }} name=\"dbsCheck\" value=\"yes\" />}\r\n            label=\"I have a valid DBS certificate\"\r\n          /> }  \r\n\r\n        </Grid>\r\n        <Grid item xs={12} align=\"center\">\r\n\r\n        <Button variant = \"contained\"  className = \"btn btn-primary w-100\" type=\"submit\">Submit</Button>\r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n    </React.Fragment>   \r\n  \r\n)}","import Button from \"@material-ui/core/Button\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = theme => ({\r\n    textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n    button: {\r\n      border: '4px',\r\n      color: \"default\",\r\n      fontWeight: 'bold',\r\n      marginLeft: 10,\r\n      marginTop: '10px',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n      },\r\n    \r\n    });\r\n\r\nconst TaskDialog = ({ open, handleClose, title, data }) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullScreen={fullScreen}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                <form className={useStyles.form} noValidate>\r\n                        {data && (\r\n                            <Grid container spacing={3}>\r\n                                 {data.firstName} {data.lastName}\r\n                                <Grid item xs={12} sm={12} >\r\n                                <TextField id=\"taskType\" type=\"string\" label=\"Task\" value={data.taskType}  variant=\"outlined\"\r\n                                style = {useStyles.textFld}\r\n                                autoComplete=\"family-name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} >\r\n                                <TextField id=\"taskSummary\" type=\"string\" label=\"Task Summary\" value={data.taskSummary}  variant=\"outlined\"\r\n                                multiline\r\n                                rows={6}\r\n                                style = {useStyles.textFld}\r\n                                autoComplete=\"family-name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskDialog;\r\n","import { Snackbar, makeStyles } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        top: theme.spacing(15),\r\n    },\r\n}));\r\n\r\nfunction Notification(props) {\r\n    const classes = useStyles();\r\n    const { notify, setNotify } = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={2000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert severity={notify.type} onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    dailog: {\r\n        padding: theme.spacing(2),\r\n        position: \"absolute\",\r\n        top: theme.spacing(15),\r\n    },\r\n    dailogContent: {\r\n        textAlign: \"center\",\r\n    },\r\n    dailogAction: {\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n}));\r\n\r\nconst ConfirmDialog = (props) => {\r\n    const classes = useStyles();\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen}\r\n            className={classes.dailog}>\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">{confirmDialog.title}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dailogContent}>\r\n                <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dailogAction}>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={confirmDialog.onConfirm}\r\n                >\r\n                    OK\r\n        </Button>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={() => setConfirmDialog({ ...ConfirmDialog, isOpen: false })}\r\n                >\r\n                    Cancel\r\n        </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default ConfirmDialog;","import MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst options = {\r\n    filterType: \"multiselect\",\r\n    selectableRows: \"none\", //can also be single/mulitple\r\n    selectableRowsOnClick: true,\r\n    rowsPerPage: \"5\",\r\n    rowsPerPageOptions: [5,10, 15, 20],\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiDataTable: {\r\n            root: {\r\n                width: \"min-content\",\r\n            },\r\n            responsiveScroll: {\r\n                maxHeight: \"none\", //not working\r\n            },\r\n        },\r\n        MUIDataTableBodyCell: {\r\n            root: {\r\n                backgroundColor: \"#FFF\",\r\n                width: \"90px\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default function TaskListTable({ taskListData, columnFields }) {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <MUIDataTable\r\n                title={\"My Task List\"}\r\n                data={taskListData}\r\n                columns={columnFields}\r\n                options={options}\r\n            />\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TaskDialog from \"./TaskDetail\";\r\nimport Notification from \"./Notification\";\r\nimport ConfirmDialog from \"./CofirmDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport initialTasks from \"./TaskListData\";\r\nimport TaskListTable from \"./TaskListTable\";\r\n\r\nconst SPACED_DATE_FORMAT = \"DD MMM YYYY\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    h5: {\r\n        color: \"#4C4B51\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nconst intialTasks = initialTasks();\r\nexport default function VolunteerSearchTask() {\r\n    const classes = useStyles();\r\n    const [pendingTasks, setPendingTasks] = useState(intialTasks);\r\n    const myTasks = pendingTasks.filter(\r\n        (task) => task.volId !== null && task.volId === 1\r\n    );\r\n    const unassignedTasks = pendingTasks.filter((task) => task.volId === null);\r\n\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [dialogData, setDialogData] = React.useState(null);\r\n    const [notifyMsg, setNotifyMsg] = useState({\r\n        isOpen: false,\r\n        message: \" \",\r\n        type: \" \",\r\n    });\r\n    const [confirmDialog, setConfirmDialog] = useState({\r\n        isOpen: false,\r\n        title: \"\",\r\n        subTitle: \"\",\r\n    });\r\n\r\n    const handleClickOpen = (e, dialogData) => {\r\n        setShowDialog(true);\r\n        setDialogData(dialogData);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShowDialog(false);\r\n        setDialogData(null);\r\n    };\r\n\r\n    const myTaskCols = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            options: {\r\n                display: false,\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"volId\",\r\n            label: \"volunteer ID\",\r\n            viewColumns: false,\r\n            options: { display: false, sort: false, filter: false },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"Full Name\",\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    //console.log(tableMeta.rowData, '......');\r\n                    return (\r\n                        <div>\r\n                            {tableMeta.rowData[2]} {tableMeta.rowData[3]}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"date\",\r\n            label: \"Start Date\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) =>\r\n                    moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"distance\",\r\n            label: \"Distance\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: true,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            disabled={tableMeta.rowData[1] === null ? true : false}\r\n                            style={{ marginLeft: 2 }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                setConfirmDialog({\r\n                                    isOpen: true,\r\n                                    title: \"Are you sure to return your assigned Task?\",\r\n                                    subTitle:\r\n                                        \"Once rejected it will be unassigned from you.To reassign the task you need to go to search task and accept it again.\",\r\n                                    onConfirm: () => {\r\n                                        setConfirmDialog({\r\n                                            ...confirmDialog,\r\n                                            isOpen: false,\r\n                                        });\r\n                                        console.log(tableMeta.rowData[1]);\r\n\r\n                                        const returnTask = pendingTasks.map((task) =>\r\n                                            task.id === value ? { ...task, volId: null } : task\r\n                                        );\r\n                                        setPendingTasks(returnTask);\r\n                                        console.log(\"myTask\");\r\n                                        console.log(myTasks);\r\n                                        console.log(\"assignTasks\");\r\n                                        console.log(unassignedTasks);\r\n                                        console.log(pendingTasks);\r\n\r\n                                        setNotifyMsg({\r\n                                            isOpen: true,\r\n                                            message: \"Task is unssigned from you\",\r\n                                            type: \"warning\",\r\n                                        });\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                minWidth: \"70px\",\r\n                            }}\r\n                            value={value}\r\n                            onClick={(e) => {\r\n                                const selectedTask = pendingTasks.find(\r\n                                    (task) => task.id === value\r\n                                );\r\n                                console.log(selectedTask);\r\n                                if (selectedTask != null) {\r\n                                    handleClickOpen(e, selectedTask);\r\n                                }\r\n                            }}\r\n                        >\r\n                            View\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    const unassignedTaskCols = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            options: {\r\n                display: false,\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"volId\",\r\n            label: \"volunteer ID\",\r\n            options: { display: false, sort: false, filter: false },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First name\",\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last name\",\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"Full Name\",\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    //console.log(tableMeta.rowData, '......');\r\n                    return (\r\n                        <div>\r\n                            {tableMeta.rowData[2]} {tableMeta.rowData[3]}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"date\",\r\n            label: \"Start Date\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) =>\r\n                    moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"distance\",\r\n            label: \"Distance\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: true,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={tableMeta.rowData[1] === null ? false : true}\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                backgroundColor:\r\n                                    tableMeta.rowData[1] === null ? \"green\" : \"lightgrey\",\r\n                            }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                //console.log(tableMeta.rowData[1]);\r\n                                setConfirmDialog({\r\n                                    isOpen: true,\r\n                                    title: \"Do you agree to accept this task?\",\r\n                                    subTitle:\r\n                                        \"Once accepted it will be assigned to you.To return the task you need to go to your task list and reject it.\",\r\n                                    onConfirm: () => {\r\n                                        setConfirmDialog({\r\n                                            ...confirmDialog,\r\n                                            isOpen: false,\r\n                                        });\r\n                                        \r\n                                        const assignTask = pendingTasks.map((task) =>\r\n                                            task.id === value ? { ...task, volId: 1 } : task\r\n                                        );\r\n                                        setPendingTasks(assignTask);\r\n                                        console.log(\"assignTasks\");\r\n                                        console.log(unassignedTasks);\r\n                                        console.log(\"myTask\");\r\n                                        console.log(myTasks);\r\n                                        console.log(pendingTasks);\r\n                                        setNotifyMsg({\r\n                                            isOpen: true,\r\n                                            message: \"Task is successfully assigned to you.\",\r\n                                            type: \"success\",\r\n                                        });\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                minWidth: \"70px\",\r\n                            }}\r\n                            value={value}\r\n                            onClick={(e) => {\r\n                                const selectedTask = pendingTasks.find(\r\n                                    (task) => task.id === value\r\n                                );\r\n                                console.log(selectedTask);\r\n                                if (selectedTask != null) {\r\n                                    handleClickOpen(e, selectedTask);\r\n                                }\r\n                            }}\r\n                        >\r\n                            View\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ height: \"100%\" }}>\r\n                <Grid id=\"start-time\" container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <h4 className={classes.h5}>{\"My Assigned Tasks\"}</h4>\r\n\r\n                        <TaskListTable taskListData={myTasks} columnFields={myTaskCols} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <h4 className={classes.h5}>{\"Search New Tasks\"}</h4>\r\n                        <TaskListTable\r\n                            taskListData={unassignedTasks}\r\n                            columnFields={unassignedTaskCols}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <TaskDialog\r\n                    open={showDialog}\r\n                    handleClose={handleClose}\r\n                    title=\"Task Summary\"\r\n                    data={dialogData}\r\n                />\r\n                <Notification notify={notifyMsg} setNotify={setNotifyMsg} />\r\n                <ConfirmDialog\r\n                    confirmDialog={confirmDialog}\r\n                    setConfirmDialog={setConfirmDialog}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default function initialTasks() {\r\n    const initialTasks = [\r\n        {\r\n            id: 1,\r\n            lastName: \"Snow\",\r\n            firstName: \"Jon\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2020-12-28\",\r\n            distance: 1,\r\n            volId: 1,\r\n        },\r\n        {\r\n            id: 2,\r\n            lastName: \"Lannister\",\r\n            firstName: \"Cersei\",\r\n            taskType: \"Dog Walking\",\r\n            taskSummary: \"I need help with dog walkingevery morning and afternoon\",\r\n            date: \"2021-01-20\",\r\n            distance: 1,\r\n            volId: 1,\r\n        },\r\n        {\r\n            id: 3,\r\n            lastName: \"Lannister\",\r\n            firstName: \"Jaime\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Asda\",\r\n            date: \"2021-01-28\",\r\n            distance: 2.3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 4,\r\n            lastName: \"Stark\",\r\n            firstName: \"Arya\",\r\n            taskType: \"Pharmacy\",\r\n            taskSummary: \"I need help with picking up my prescription from local gp\",\r\n            date: \"2021-03-20\",\r\n            distance: 0.8,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 5,\r\n            lastName: \"Targaryen\",\r\n            firstName: \"Daenerys\",\r\n            taskType: \"Hospital\",\r\n            taskSummary: \"I need help to drop off and pick up from my hospital\",\r\n            date: \"2021-01-10\",\r\n            distance: 2,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 6,\r\n            lastName: \"Melisandre\",\r\n            firstName: null,\r\n            taskType: \"Phone Call\",\r\n            taskSummary: \"I need someone to give me a call to have a chat\",\r\n            date: \"2021-01-20\",\r\n            distance: 5,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 7,\r\n            lastName: \"Clifford\",\r\n            firstName: \"Ferrara\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2021-01-20\",\r\n            distance: 4,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 8,\r\n            lastName: \"Frances\",\r\n            firstName: \"Rossini\",\r\n            taskType: \"Other\",\r\n            taskSummary: \"I need help with mowing my garden\",\r\n            date: \"2021-01-20\",\r\n            distance: 2,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 9,\r\n            lastName: \"Roxie\",\r\n            firstName: \"Harvey\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Sainsbuyrys\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 10,\r\n            lastName: \"Indra\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 11,\r\n            lastName: \"Paanas\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 12,\r\n            lastName: \"Paanas\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 13,\r\n            lastName: \"Kate\",\r\n            firstName: \"Middleton\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 14,\r\n            lastName: \"Joe\",\r\n            firstName: \"Kelly\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2021-01-20\",\r\n            distance: 4,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 15,\r\n            lastName: \"Frances\",\r\n            firstName: \"Rai\",\r\n            taskType: \"Other\",\r\n            taskSummary: \"I need help with mowing my garden\",\r\n            date: \"2021-01-20\",\r\n            distance: 2,\r\n            volId: null,\r\n        },\r\n        {\r\n            id: 16,\r\n            lastName: \"Roxie\",\r\n            firstName: \"Raymond\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Sainsbuyrys\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n        },\r\n    ];\r\n    return initialTasks;\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n// import Checkbox from '@material-ui/core/Checkbox'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useForm } from 'react-hook-form'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    p: { margin: \"10px 2px 10px 2px\" },\r\n})\r\n\r\nfunction FormDialog({ open, handleClose, taskType, addTask }) {\r\n\r\n    const dialogHeader = {\r\n        \"shop\": \"Shopping\",\r\n        \"pharm\": \"Collect medicine\",\r\n        \"dog\": \"Dog Walking\",\r\n        \"hospital\": \"Visit Hospital Appointment\",\r\n        \"phone\": \"Friendly Chat\",\r\n        \"any\": \"I need help with ...\",\r\n    }\r\n\r\n    const getFormDate = date => {\r\n        let year = date.getFullYear();\r\n        let month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n        let day = date.getDate().toString().padStart(2, '0');\r\n        return year + '-' + month + '-' + day\r\n    }\r\n\r\n    const defaultValues = {\r\n        taskDetails: \"\",\r\n        startDate: null,\r\n        startTime: \"08:00\",\r\n        endDate: null,\r\n        endTime: \"20:00\"\r\n    };\r\n\r\n\r\n    const { register, handleSubmit, reset, errors, watch, setValue, clearErrors, control } =\r\n        useForm({ defaultValues: defaultValues, mode: \"all\" })\r\n\r\n    const resetAndClose = () => {\r\n        reset()\r\n        handleClose()\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        const start = new Date(data.startDate + \"T\" + data.startTime)\r\n        const end = new Date(data.endDate + \"T\" + data.endTime)\r\n\r\n        addTask({\r\n            taskType: taskType, taskDetails: data.taskDetails,\r\n            start: start, end: end\r\n        })\r\n        resetAndClose()\r\n    };\r\n\r\n    const watchAll = watch()\r\n\r\n    // TODO Call through DB\r\n    // Minimum time needed to perform a task *in minutes*\r\n    const minDuration = 30\r\n\r\n    const validateTimes = () => {\r\n        const start = new Date(watchAll.startDate + \"T\" + watchAll.startTime)\r\n        const end = new Date(watchAll.endDate + \"T\" + watchAll.endTime)\r\n\r\n        if (!watchAll.startDate || !watchAll.startTime ||\r\n            !watchAll.endDate || !watchAll.endTime) {\r\n            clearErrors(\"endTime\")\r\n            return\r\n        }\r\n\r\n        const minEnd = start.setMinutes(start.getMinutes() + minDuration)\r\n        if (minEnd > end)\r\n            return \"Not enough time to complete your task. \" +\r\n                \"Consider at least \" + minDuration + \" minutes.\" \r\n    }\r\n\r\n    const handleStartDate = e => {\r\n        if (!e.target.value) return\r\n        if ((!watchAll.endDate) ||\r\n            (watchAll.endDate && (watchAll.endDate < e.target.value))) {\r\n            setValue(\"endDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleEndDate = e => {\r\n        if (!e.target.value) return\r\n        if (watchAll.startDate && (watchAll.startDate > e.target.value)) {\r\n            setValue(\"startDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const reqFieldMsg = \"Required field\"\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={resetAndClose} fullWidth maxWidth=\"sm\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"dialog-add-task\">\r\n                        {dialogHeader[taskType]}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        < TextField\r\n                            id=\"taskDetails\"\r\n                            name=\"taskDetails\"\r\n                            inputRef={register({ required: [\"shop\", \"any\"].includes(taskType) })}\r\n                            autoFocus\r\n                            label=\"Details\"\r\n                            multiline\r\n                            rows={5}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            error={errors.taskDetails}\r\n                            helperText={errors.taskDetails && \"Details are required for this task type\"}\r\n                        />\r\n\r\n                        <p className={classes.p}>\r\n                            <br />\r\n                            Set dates when you need it: < br />\r\n                            <Typography variant=\"caption\">\r\n                                Providing wider time window will increase your chances to find a volunteer.\r\n                            </ Typography >\r\n                        </p>\r\n\r\n                        <Grid id=\"start-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    label=\"Starting from\"\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    onChange={handleStartDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startDate\")}\r\n                                    helperText={errors.startDate && errors.startDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"time\"\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startTime\")}\r\n                                    helperText={errors.startTime && errors.startTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid id=\"finish-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    id=\"endDate\"\r\n                                    name=\"endDate\"\r\n                                    label=\"Ending at\"\r\n                                    fullWidth\r\n                                    onChange={handleEndDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endDate\")}\r\n                                    helperText={errors.endDate && errors.endDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({\r\n                                        required: reqFieldMsg,\r\n                                        validate: validateTimes\r\n                                    })}\r\n                                    type=\"time\"\r\n                                    id=\"endTime\"\r\n                                    name=\"endTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endTime\")}\r\n                                    helperText={errors.endTime && errors.endTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* TODO */}\r\n                        {/* <FormControlLabel disabled\r\n                            control={\r\n                                <Checkbox\r\n                                    name=\"dbsRequired\"\r\n                                    checked={false}\r\n                                />}\r\n                            label=\"Only volunteers with DBS certificate\"\r\n                        /> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={resetAndClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"Submit\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormDialog","import React from \"react\"\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\n\r\nconst options = {\r\n    filterType: \"multiselect\",\r\n    selectableRows: \"none\", //can also be single/mulitple\r\n    selectableRowsOnClick: true,\r\n    count: 5,\r\n};\r\n\r\nexport default function TaskTable({taskList}) {\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            options: { display: false, sort: false, filter: false },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task Type\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"taskDetails\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                // customBodyRender: (value, tableMeta, updateValue) => {\r\n                //     return (\r\n                //         <Button\r\n                //             variant=\"contained\"\r\n                //             color=\"primary\"\r\n                //             size=\"small\"\r\n                //             style={{ marginLeft: 16 }}\r\n                //             value={value}\r\n                //             onClick={(e) => handleClickOpen(e, value)}\r\n                //         >\r\n                //             View\r\n                //         </Button>\r\n                //     );\r\n                // },\r\n            },\r\n        },\r\n        {\r\n            name: \"start\",\r\n            label: \"Start Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n\r\n                // customBodyRender: (value) =>\r\n                //     moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"end\",\r\n            label: \"End Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n\r\n                // customBodyRender: (value) =>\r\n                //     moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"status\",\r\n            label: \"State\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n\r\n                // customBodyRender: (value) =>\r\n                //     moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"actions\",\r\n            label: \"Actions\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                // customBodyRender: (value, tableMeta) => {\r\n                //     return (\r\n                //         <Button\r\n                //             variant=\"contained\"\r\n                //             color=\"primary\"\r\n                //             size=\"small\"\r\n                //             disabled={tableMeta.rowData[1] === null ? false : true}\r\n                //             style={{\r\n                //                 marginLeft: 16,\r\n                //                 backgroundColor:\r\n                //                     tableMeta.rowData[1] === null ? \"green\" : \"lightgrey\",\r\n                //             }}\r\n                //             className=\"button\"\r\n                //             value={value}\r\n                //             onClick={() => {\r\n                //                 console.log(tableMeta.rowData[1]);\r\n                        //     }}\r\n                        // >\r\n                        //     Accept\r\n                        // </Button>\r\n                //     );\r\n                // },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <div style={{ height: \"100%\" }}> */}\r\n                {/* <MuiThemeProvider theme={theme}> */}\r\n                    <MUIDataTable\r\n                        title=\"All Tasks\"\r\n                        data={taskList}\r\n                        columns={columns}\r\n                        options={options}\r\n                    />\r\n                {/* </MuiThemeProvider> */}\r\n            {/* </div> */}\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useState } from \"react\"\r\nimport Button from '@material-ui/core/Button'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PetsIcon from '@material-ui/icons/Pets'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy'\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp'\r\nimport NewTaskForm from './NewTaskForm'\r\nimport TasksTable from './TaskTable'\r\nimport initialTasks from \"./tasksDataOnly\"\r\n\r\nconst useStyles =\r\n    makeStyles(\r\n        {\r\n            h1: {\r\n                color: \"#4C4B51\"\r\n            },\r\n            largeButton: {\r\n                border: 5,\r\n                color: \"#FF8E53\",\r\n                padding: \"15px 15px\",\r\n                margin: \"5px 15px 10px 15px\",\r\n                height: 100,\r\n                width: 100,\r\n            },\r\n            largeIcon:\r\n                { fontSize: 60 },\r\n\r\n            label: {\r\n                flexDirection: 'column',\r\n                // color: '#4C4B51'\r\n            },\r\n            icon: {\r\n                fontSize: '32px !important',\r\n                marginBottom: 5\r\n            }\r\n        })\r\n\r\n\r\nfunction AddTask() {\r\n\r\n    const [taskList, setTaskList] = useState(initialTasks())\r\n    let nextId = 11\r\n\r\n    const addTask = newTask => {\r\n        newTask.id = nextId\r\n        nextId++\r\n        newTask.status = \"open\"\r\n        const updatedTaskList = [...taskList, newTask]\r\n        setTaskList(updatedTaskList)\r\n        console.log(\"New task added: \", newTask)\r\n        console.log(\"Tasks list :\", updatedTaskList)\r\n        console.log(\"Tasks list :\", taskList)\r\n    }\r\n\r\n    const [showAddDialog, setShowAddDialog] = React.useState(false);\r\n    const [taskType, setTaskType] = React.useState(null);\r\n\r\n    const handleClickOpen = (e, taskType) => {\r\n        setTaskType(taskType)\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setTaskType(null)\r\n        setShowAddDialog(false)\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return <div>\r\n\r\n        <h1 className=\"text\">I need help with...</h1>\r\n\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"shop\")}>\r\n            <ShoppingCartIcon className={classes.largeIcon} />\r\n            Shopping\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"pharm\")}>\r\n            <LocalPharmacyIcon className={classes.largeIcon} />\r\n            Pharmacy\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"dog\")}>\r\n            <PetsIcon className={classes.largeIcon} />\r\n            Dog Walk\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"hospital\")}>\r\n            <LocalHospitalIcon className={classes.largeIcon} />\r\n            Hospital\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"phone\")}>\r\n            <PhoneIcon className={classes.largeIcon} />\r\n            Phone Call\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"any\")}>\r\n            <LiveHelpIcon className={classes.largeIcon} />\r\n            Other\r\n        </Button>\r\n\r\n        <NewTaskForm open={showAddDialog} handleClose={handleClose} taskType={taskType} addTask={addTask} />\r\n        <TasksTable taskList={taskList} />\r\n    </div>\r\n}\r\n\r\nexport default AddTask","\r\n\r\nexport default function intialTasks() {\r\n     \r\n const tList = [\r\n    {\r\n        id: 1,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Tesco\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 2,\r\n        taskType: \"Dog Walking\",\r\n        taskDetails: \"I need help with dog walkingevery morning and afternoon\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 3,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Asda\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 4,\r\n        taskType: \"Pharmacy\",\r\n        taskDetails: \"I need help with picking up my prescription from local gp\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 5,\r\n        taskType: \"Hospital\",\r\n        taskDetails: \"I need help to drop off and pick up from my hospital\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 6,\r\n        taskType: \"Phone Call\",\r\n        taskDetails: \"I need someone to give me a call to have a chat\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 7,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Tesco\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 8,\r\n        taskType: \"Other\",\r\n        taskDetails: \"I need help with mowing my garden\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 9,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Sainsbuyrys\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n    {\r\n        id: 10,\r\n        taskType: \"Medical\",\r\n        taskDetails: \"I need help with picking up my prescription\",\r\n        start: \"2020-12-28T10:00\",\r\n        end: \"2020-12-28T10:00\",\r\n        status: \"done\",\r\n    },\r\n]\r\nreturn tList\r\n}","import VolunteerSearchTask from \"./VolunteerSearchTask\";\r\n\r\nconst VolunteerWelcome = () => {\r\n  return (\r\n    <div>\r\n      <VolunteerSearchTask />        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolunteerWelcome;\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n          console.log(currentUser)\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/\" />\r\n        \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AppNavBar from \"./components/structure/AppNavBar\"\r\nimport Landing from \"./components/landing/Landing\"\r\nimport Legal from \"./components/landing/Legal\"\r\nimport Cookie from \"./components/landing/Cookie\"\r\nimport Support from \"./components/landing/Support\"\r\nimport TermConditions from \"./components/landing/TermConditions\"\r\nimport About from \"./components/landing/About\"\r\nimport Contact from \"./components/landing/Contact\"\r\nimport Footer from \"./components/structure/Footer\"\r\nimport SignIn from \"./components/login/SignIn\"\r\nimport SignUp from \"./components/login/SignUp\"\r\nimport ForgotPassword from \"./components/login/ForgotPassword\"\r\nimport RegistrationPage  from \"./components/registrationPage/RegistrationPage\"\r\nimport VolunteerSearchTask from \"./components/volunteerTask/VolunteerSearchTask\"\r\nimport AddTask from \"./components/task/AddTask\"\r\nimport VolunteerWelcome from \"./components/volunteerTask/VolunteerWelcomePage\"\r\nimport { BrowserRouter as Router,  Route, Switch } from \"react-router-dom\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport PrivateRoute from \"./components/PrivateRoute\"\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        \r\n        <Router>\r\n            <AuthProvider>\r\n            <div className=\"App\">\r\n                <AppNavBar />\r\n                <div className=\"AppContent\">\r\n                <Switch>\r\n                <Route exact path=\"/HelpWhoNeeds/\">\r\n                    <Landing />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>\r\n                <Route path=\"/login/:userType\">\r\n                    <SignIn />\r\n                </Route>  \r\n                <Route path=\"/signUp/:user\">\r\n                    <SignUp />\r\n                </Route>  \r\n                <Route path=\"/forgotPassword/:user\">\r\n                    <ForgotPassword />\r\n                </Route>    \r\n                <Route path=\"/legal\">\r\n                    <Legal />\r\n                </Route>    \r\n                <Route path=\"/support\">\r\n                    <Support />\r\n                </Route>    \r\n                <Route path=\"/cookie\">\r\n                    <Cookie />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>    \r\n                <Route path=\"/termconditions\">\r\n                    <TermConditions />\r\n                </Route>    \r\n                 \r\n                <Route path=\"/requestee/tasks\">\r\n                    <AddTask />\r\n                </Route>   \r\n                <PrivateRoute path=\"/registrationPage/:user\" component= {RegistrationPage} />\r\n                <PrivateRoute path=\"/searchTask\" component= {VolunteerSearchTask} />\r\n                <PrivateRoute path=\"/myTask\" component= {VolunteerWelcome} />\r\n                <PrivateRoute path=\"/addTask\" component= {AddTask} />\r\n                </Switch>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n            </AuthProvider>\r\n        </Router>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}