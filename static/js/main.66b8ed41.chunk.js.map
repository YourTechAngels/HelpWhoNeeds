{"version":3,"sources":["fireBase.js","contexts/AuthContext.js","components/structure/AppNavBar.js","components/landing/Landing.js","components/landing/Legal.js","components/landing/Cookie.js","components/landing/Support.js","components/landing/Privacy.js","components/landing/TermConditions.js","components/landing/About.js","components/landing/Contact.js","components/structure/Footer.js","components/login/SignIn.js","components/login/SignUp.js","components/structure/Notification.js","components/login/Profile.js","components/login/ForgotPassword.js","components/registrationPage/RegistrationPage.js","components/volunteerTask/TaskDetail.js","components/volunteerTask/Notification.js","components/volunteerTask/CofirmDialog.js","components/volunteerTask/TaskListTable.js","components/volunteerTask/VolunteerSearchTask.js","components/task/NewTaskButtons.js","components/task/NewTaskForm.js","components/task/TaskTable.js","components/task/AddTask.js","components/volunteerTask/VolunteerWelcomePage.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","signout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","title","appBar","backgroundColor","HomeIcon","props","SvgIcon","d","AppNavBar","classes","setAuth","anchorEl","setAnchorEl","console","log","uid","open","Boolean","history","useHistory","handleClose","a","push","alert","className","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","aria-label","label","AppBar","position","Toolbar","color","fontSize","onClick","window","location","href","Typography","variant","Button","component","Link","to","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","button","pInfo","textAlign","divContentWrapper","minHeight","paddingLeft","Landing","Legal","align","Grid","container","flex-start","noWrap","Cookie","Support","Privacy","TermConditions","About","direction","justify","item","xs","Contact","status","setStatus","handleSubmit","e","preventDefault","elements","name","message","details","fetch","method","headers","body","JSON","stringify","response","json","result","onSubmit","htmlFor","type","required","footer","boxSizing","height","padding","borderTop","width","Footer","Copyright","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","SignIn","useParams","userType","emailRef","useRef","passwordRef","error","setError","setEmail","uID","setUID","nameLabel","current","ui","Container","maxWidth","CssBaseline","Avatar","Alert","severity","AlertTitle","TextField","fullWidth","inputRef","autoFocus","Checkbox","disabled","Box","mt","Signup","passwordConfirmRef","top","Notification","notify","setNotify","verticalPosTop","reason","isOpen","Snackbar","autoHideDuration","textFld","border","fontWeight","marginRight","Profile","initialInputState","firstName","lastName","dateOfBirth","phoneNumber","postcode","address1","address2","city","county","formData","setFormData","successMessage","setSuccessMessage","postcodeRef","address1Ref","address2Ref","cityRef","countyRef","DBSChecked","setDBSChecked","addressLine1","setAddressLine1","addressLine2","setAddressLine2","countyName","setCountyName","cityName","setCityName","addressList","setAddressList","postCodeSearched","setpostCodeSearched","errors","setErrors","setId","isVolunteer","setIsVolunteer","errorpostcode","setErrorpostcode","notifyMsg","setNotifyMsg","axios","get","params","then","responseData","data","userDataSet","first_name","last_name","date_of_birth","phone_number","post_code","address_line_1","address_line_2","is_volunteer","dbs","catch","request","config","handleChange","handleChecked","addLine1","addLine2","addCity","addCounty","dob","undefined","mail","promises","Promise","all","finally","patch","Fragment","style","sm","autoComplete","InputLabelProps","shrink","inputProps","maxLength","ButtonGroup","addresses","FormControl","InputLabel","Select","native","labelId","valueList","selectedOptions","map","opt","addressStore","toString","split","addressArray","marginLeft","ForgotPassword","setMessage","RegistrationPage","DBSchecked","evt","post","TaskDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","DialogContent","noValidate","taskType","taskDetails","multiline","rows","DialogActions","dailog","dailogContent","dailogAction","justifyContent","ConfirmDialog","confirmDialog","setConfirmDialog","subTitle","size","minWidth","onConfirm","SPACED_DATE_FORMAT","options","filterType","selectableRows","rowsPerPage","rowsPerPageOptions","print","download","sortOrder","TaskListTable","taskListData","isMyTask","handleAccept","handleView","handleReject","handleComplete","taskCols","sort","filter","viewColumns","customBodyRender","tableMeta","updateValue","rowData","moment","format","createMuiTheme","overrides","MuiDataTable","responsiveScroll","maxHeight","MUIDataTableToolbar","background","MUIDataTableBodyCell","overflow","whiteSpace","textOverflow","columns","h5","VolunteerSearchTask","userUID","userId","setUserId","pendingTasks","setPendingTasks","dataFetched","setDataFetched","taskStateUpdated","setTaskStateUpdated","volId","allTask","task","requestee_details","task_type","description","start","start_time","end","end_time","distance","volunteer","myTasks","unassignedTasks","hideMyTask","setHideMyTask","hideNewTask","setHideNewTask","showDialog","setShowDialog","dialogData","setDialogData","taskId","selectedTask","find","handleClickOpen","isUpdatedByVol","returnTask","assignTask","CircularProgress","Hidden","smUp","h1","largeButton","largeIcon","icon","marginBottom","NewTaskButtons","p","FormDialog","defaultValues","updTaskId","updateTaskList","reqId","reset","getFormDate","date","getMonth","padStart","getDate","useForm","mode","register","watch","setValue","clearErrors","resetAndClose","watchAll","reqFieldMsg","dbsReq","createItem","startDate","startTime","endDate","endTime","newTaskId","newTask","put","updatedTask","includes","helperText","min","hasOwnProperty","validate","setMinutes","getMinutes","TaskTable","taskList","handleCopy","handleEdit","handleRemove","slice","length","MuiPaper","MuiTableCell","MUIDataTableHeadCell","setRowProps","row","AddTask","setReqId","setTaskList","parseDbTask","dbTask","taskTypeName","task_type_name","dbs_required","statusName","status_name","url","timeout","requid","taskData","requestee","uId","taskDefaults","showAddDialog","setShowAddDialog","setTaskType","newTaskDefaults","setNewTaskDefaults","setUpdTaskId","NewTaskForm","updatedTaskList","addTask","updTask","updateTask","taskToCopy","taskToEdit","copyTaskList","VolunteerWelcome","PrivateRoute","Component","rest","render","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66b8ed41.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY ,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../fireBase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function signout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    signout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    MenuItem,\r\n    Menu,\r\n    SvgIcon,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& > svg\": {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        backgroundColor: \"#9370db\",\r\n    },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n        </SvgIcon>\r\n    );\r\n} /*For HomeIcons */\r\n\r\nconst AppNavBar = () => {\r\n    const classes = useStyles();\r\n    const { currentUser, signout } = useAuth();\r\n    const [auth, setAuth] = React.useState(false); \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setAuth(currentUser === null ? false : true);\r\n    }, [currentUser]);\r\n\r\n    if(currentUser) {\r\n     console.log(currentUser.email);\r\n     console.log(currentUser.uid); }\r\n     console.log(\"auth\" + auth);\r\n    const open = Boolean(anchorEl);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    async function handleSignOut() {\r\n        try {\r\n            await signout();\r\n            setAuth(false);\r\n            history.push(\"/HelpWhoNeeds\");\r\n        } catch (error) {\r\n            setAuth(currentUser === null ? false : true);\r\n            console.log(error);\r\n            alert(\"failed to log out\");\r\n        }\r\n\r\n        console.log(\"auth\" + auth);\r\n        handleClose();\r\n    }\r\n     \r\n    const handleClick=() => {\r\n        history.push(\"/profile\")\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={auth}\r\n                            onChange={handleChange}\r\n                            aria-label=\"login switch\"\r\n                        />\r\n                    }\r\n                    label={auth ? \"Logout\" : \"Login\"}\r\n                />\r\n            </FormGroup>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                   <HomeIcon\r\n                        color=\"action\"\r\n                        fontSize=\"large\"\r\n                        onClick={(event) => (window.location.href = \"/helpwhoneeds/\")}\r\n                    />\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Help Who Needs\r\n          </Typography>\r\n\r\n                    <Button color=\"inherit\" component={Link} to={\"/about\"}>\r\n                        About\r\n          </Button>\r\n                    <Button color=\"inherit\" component={Link} to={\"/contact\"}>\r\n                        Contact\r\n          </Button>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClick}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppNavBar;\r\n","import { Link, useHistory } from \"react-router-dom\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\nconst Landing = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    const handleClick =() => { \r\n        (currentUser ? history.push(\"/myTask\") : history.push(\"/login/volunteer\") )           \r\n    } \r\n    const handleUserClick =() => {\r\n         (currentUser ? history.push(\"/addTask\") : history.push(\"/login/requestee\") )\r\n    }     \r\n      \r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n                <h1>Help Who Needs</h1>\r\n                <p>\r\n                    Our TechForGood project aims to match a volunteer with a vulnerable\r\n                    person who is shielding in these unprecedented times. Hence our\r\n                    application is called HelpWhoNeeds. The app will aim to match a\r\n                    volunteer with a vulnerable person in their immediate local area\r\n                    helping with chores such as shopping, GP visits, prescriptions, dog\r\n                    walking or just some social contact with the appropriate measures in\r\n                    place. We hope this app brings some comfort and relief to the users\r\n                    with a sense of moral and social obligation. \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> If you would like help or need any assistance using our system, please call <strong>0800 123 4567</strong>.</p>\r\n                <Button\r\n                    className= {classes.button}\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleUserClick}             \r\n                >\r\n                    I need Help\r\n                </Button>\r\n                \r\n                <Button\r\n                    className= {classes.button} \r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleClick} \r\n                >\r\n                    I can Help\r\n        </Button>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nconst Legal = () => (\r\n    <div>\r\n       \r\n      <h2 align=\"center\"> Legal</h2>\r\n      \r\n      <Grid container flex-start=\"left\" >\r\n      \r\n     \r\n    <Typography  color=\"inherit\" noWrap>\r\n       <p>Your data and GDPR </p>\r\n        <p>End-user privacy</p>\r\n        <p>Intellectual property (IP) rights.</p>\r\n        <p>Advertising and promotions</p>\r\n        <p>Users of this app must be 18 or over</p>\r\n    </Typography>\r\n      \r\n      </Grid>\r\n        \r\n    </div>\r\n);\r\n\r\nexport default Legal;\r\n","\r\nconst Cookie = () => (\r\n    <div>\r\n        <h2>Cookies</h2>\r\n        <p>\r\n           Cookie Policy\r\n           Cookies are used for a variety of things that help improve your online experience. \r\n           Some cookies help make sure your information is secure when using our services while keeping our forms and site easy to use.\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Cookie;","\r\nconst Support = () => (\r\n    <div>\r\n        <h2>Support</h2>\r\n        <p>\r\n            Please call us anytime for help and support. \r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Support;","\r\nconst Privacy = () => (\r\n    <div>\r\n        <h2>Privacy Policy</h2>\r\n        <p>\r\n         YourTechAngels is committed to protecting and respecting your privacy. This notice describes what personal data we collect, how we will use that data and how we keep your data safe. For additional information on how we use cookies, please refer to our Cookie Policy. For all other information regarding our services, please refer to our Terms & Conditions.\r\n         Transparency and informing the public about how their data are being used are two basic goals \r\n         of the GDPR.\r\n</p>\r\n  <p>  In this Privacy Notice we will cover: </p>\r\n\r\n  <p>  Who is the data controller?   </p>\r\n   <p> What personal data do we process, for which purpose and what is our legal basis for processing it?  </p>\r\n   <p> Who will process your data?</p>\r\n   <p> Data transfer outside the European Union</p>\r\n  <p>  How long do we keep your data?   </p>\r\n  <p>  Your rights      </p>\r\n   <p> Security </p>\r\n   <p> We collect data from you when you visit our websites or while using our associated apps \r\n       (“websites and Apps”). The data we collect includes your name, email address, telephone number \r\n       and shipping/billing address, your day and month of birth, your favorite designers and information \r\n       regarding your browsing and shopping behaviour. Data is collected when you place an order, \r\n       call our Customer Care team, register with us, opt into our marketing communications, browse our site\r\n       and use other services offered by our site. The data we collect is used to take your order, \r\n       process payment and deliver your purchase to you. We also use it to deliver marketing communications, \r\n       give access to services for registered users, personalize your visit to our site and provide \r\n       assistance via our Customer Care team.\r\n</p>\r\n<p>We must have a valid reason for processing your personal data and we may not collect, store or use data about you that is not compatible with that reason. There are four valid reasons for our use of your personal data: Performance of a Contract, our Legitimate Interests as a business, a Legal Obligation we are required to follow and Consent which you provide to us.\r\n</p>\r\n<p>If you have given your consent to our use of your personal data, you are entitled to withdraw this consent at any time.\r\n\r\n\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Privacy;\r\n","\r\nconst TermConditions = () => (\r\n    <div>\r\n        <h2>Terms & Conditions</h2>\r\n        <p>\r\n            These are our Terms & Conditions. </p>\r\n            <p>What’s covered in these terms </p>\r\n           <p> We know it’s tempting to skip these Terms of Service, \r\n               but it’s important to establish what you can expect from us as you use our services, \r\n               and what we expect from you.</p>\r\n\r\n<p>These Terms of Service reflect the way that our business works, the laws that apply to our company, \r\nand certain things that we’ve always believed to be true. As a result, these Terms of Service \r\nhelp define our relationship with you as you interact with our services. For example, \r\nthese terms include the following topic headings:</p>\r\n\r\n    <p>What you can expect from us, which describes how we provide and develop our services\r\n    What we expect from you, which establishes certain rules for using our services\r\n    Content in services, which describes the intellectual property rights to the content that you find \r\n    in our services – whether that content belongs to you, us or others\r\n    In case of problems or disagreements, which describes other legal rights that you have, and what to \r\n    expect in case someone violates these terms.</p>\r\n\r\n<p> Understanding these terms is important because, to use our services, you must accept these terms.\r\n\r\nBesides these terms, we also publish a Privacy Policy. Although it’s not part of these terms, we encourage \r\nyou to read it to better understand how you can update, manage, export and delete your information.</p>\r\n\r\n<p>Service provider</p>\r\n\r\nYourTechAngels services are provided by, and you’re contracting with:\r\n\r\nYourTechAngels\r\norganised under the laws of the United Kingsdom and operating under the laws of the UK\r\n\r\nXX Street,\r\nLondon, UK\r\n\r\n<p>Age requirements</p>\r\n\r\n<p>If you’re under the age required to manage your own, you must have your parent or legal guardian’s \r\npermission to use this account. Please ask your parent or legal guardian to read these terms with you.\r\n\r\nIf you’re a parent or legal guardian, and you allow your child to use the services, then these terms apply to you and you’re responsible for your child’s activity on the services.\r\n\r\nSome services have additional age requirements as described in their service-specific additional terms and policies.\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default TermConditions;\r\n","import { Link } from \"react-router-dom\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\n\r\nconst About = () =>  {\r\n\r\n\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n               <h1>YourTechAngels - Project HelpWhoNeeds</h1>\r\n        \r\n        <p>\r\n            Established in 2020, Your Tech Angels is a collaborative team of 4 engineers who are involved \r\n            and interested in technology.  Our aim is to use technology to help others especially during \r\n            the Covid 19 pandemic.\r\n            This is the motivation behind our HelpWhoNeeds project that assists the shielding population in \r\n            the UK with everyday assistance such as delivering groceries or prescriptions, dog walking or \r\n            even just a chat. The app we are building will help those who need to find a volunteer match in \r\n            their local areas - near their vicinity based on their post code during lockdown and other \r\n            times too.  \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> You can request Volunteer help 24x7 - <strong>0800 123 4567</strong></p>\r\n        \r\n   \r\n\r\n        <Grid container \r\n        \r\n              direction=\"row\"\r\n             // alignItems=\"centre\" \r\n             spacing={4} \r\n             justify=\"center\"\r\n              \r\n              >\r\n\r\n                  <Grid item xs={2} >\r\n               <Link to={'/legal'} variant=\"body2\">\r\n                  Legal\r\n               </Link> </Grid>\r\n               \r\n               <Grid  item xs={2}>\r\n               <Link to={`/cookie`} variant=\"body2\">\r\n                  Cookies\r\n               </Link> </Grid>\r\n\r\n               <Grid  item xs={2} >\r\n               <Link to={`/support`} variant=\"body2\">\r\n                  Support\r\n               </Link> </Grid>\r\n\r\n               <Grid  item xs={2}>\r\n               <Link to={`/termconditions`} variant=\"body2\">\r\n                  TermsConditions\r\n               </Link> </Grid>\r\n\r\n               <Grid item xs={2}>\r\n               <Link to={`/privacy`} variant=\"body2\">\r\n                  Privacy\r\n               </Link> </Grid>\r\n\r\n               </Grid>          \r\n\r\n    </div>\r\n\r\n    )};\r\n\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = {\r\n  textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n  button: {\r\n    border: '4px',\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    marginTop: '10px',\r\n  },\r\n  divContentWrapper:{\r\n    textAlign: \"center\",\r\n    minHeight: \"100%\",\r\n    paddingLeft: \"50px\",\r\n}\r\n  };\r\n\r\n \r\nconst Contact = () => {\r\n  const [status, setStatus] = useState(\"Submit\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setStatus(\"Sending...\");\r\n    const { name, email, message } = e.target.elements;\r\n    let details = {\r\n      name: name.value,\r\n      email: email.value,\r\n      message: message.value,\r\n    };\r\n    let response = await fetch(\"http://localhost:5000/contact\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(details),\r\n    });\r\n    setStatus(\"Submit\");\r\n    let result = await response.json();\r\n    alert(result.status);\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input type=\"text\" id=\"name\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"message\">Message:</label>\r\n        <textarea id=\"message\" required />\r\n      </div>\r\n      <button type=\"submit\">{status}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Contact;","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    footer:{\r\n        boxSizing: \"border-box\",\r\n        height: \"50px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#eee\",\r\n        borderTop: \"1px solid #e0e0e0\",       \r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n    },\r\n\r\n});\r\n\r\nfunction Footer(){\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <footer className= {classes.footer}>\r\n        <div>\r\n            Made by <a href=\"https://github.com/YourTechAngels\">YourTechAngels</a>\r\n        </div>\r\n        </footer>\r\n    )  \r\n}\r\n\r\n\r\nexport default Footer;","import React, { useState, useRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const param = useParams();\r\n    const user = param.userType;\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login, currentUser } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [uID, setUID] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const nameLabel = (`${user}`==='AssistanceRequester'? 'Requestee': `${user}`)\r\n    \r\n  \r\n    async function handleSubmit(e) {\r\n      e.preventDefault()\r\n  \r\n      try {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n\r\n        if (`${user}` === 'volunteer')\r\n        { history.push(\"/mytask\");\r\n          console.log(process.env.PUBLIC_URL) }\r\n        else {\r\n            history.push(\"/addtask\") }\r\n        }\r\n     catch {\r\n        setError(\"Failed to log in\")\r\n      }\r\n  \r\n      setLoading(false)\r\n      if(currentUser) {\r\n        setEmail(currentUser.email);\r\n        setUID(currentUser.ui)\r\n        console.log(email);\r\n        console.log(uID); }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                   {nameLabel} Sign in\r\n                </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"email\" \r\n                        inputRef={emailRef} \r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"password\" \r\n                        inputRef={passwordRef}\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled = {loading}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link to={`/forgotPassword/${user}`} variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            New User ?<Link to={`/signup/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                     </Grid></Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const param = useParams();\r\n  const user = param.user;\r\n  \r\n\r\n    async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    console.log(emailRef.current.value,passwordRef.current.value, passwordConfirmRef.current.value)\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords does not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(`/registrationpage/${user}`)\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)  \r\n   \r\n}\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign Up\r\n           </Typography>\r\n           { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n           <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordRef}\r\n                    label=\"Password\"\r\n                    id=\"password\"\r\n                />\r\n                 <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordConfirmRef}\r\n                    label=\"Confirm Password\"\r\n                    id=\"passwordConfirm\"\r\n                />\r\n                        <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Sign Up\r\n                    </Button>\r\n              </form>\r\n              </div>  <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n  )\r\n}","import { Snackbar, makeStyles } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        top: theme.spacing(15),\r\n    },\r\n}));\r\n\r\nfunction Notification(props) {\r\n    const classes = useStyles();\r\n    const { notify, setNotify, verticalPosTop } = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false,\r\n        });\r\n    };\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={2000}\r\n            anchorOrigin={{\r\n                vertical: verticalPosTop ? \"top\" : \"bottom\",\r\n                horizontal: \"center\",\r\n            }}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert severity={notify.type} onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React, { useState, useRef, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\"\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport Notification from \"../structure/Notification\"\r\n\r\nconst useStyles = {\r\n    textFld: { width: '85%', height: 40, paddingLeft: 8 },\r\n    button: {\r\n        border: '4px',\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        marginRight: '20px',\r\n        marginTop: '10px'    \r\n    },\r\n\r\n};\r\n\r\n\r\nexport default function Profile(props) {          \r\n\r\n    const initialInputState = {\r\n        firstName: \"\", lastName: \"\", dateOfBirth: \"\", phoneNumber: \"\", postcode: \"\", address1: \"\", address2: \"\",city: \"\", county: \"\", email:\"\"\r\n      }\r\n    const [formData, setFormData,] = useState({initialInputState})\r\n    const { firstName, lastName, dateOfBirth, phoneNumber, postcode, address1, address2, city, county, email } = formData\r\n    const [successMessage, setSuccessMessage] = useState(\"\")\r\n    const emailRef = useRef()\r\n    const postcodeRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const passwordRef = useRef()\r\n    const address1Ref = useRef()\r\n    const address2Ref = useRef()\r\n    const cityRef = useRef()\r\n    const countyRef = useRef()    \r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const uID = currentUser.uid\r\n    const emailID = currentUser.email\r\n    const [DBSChecked, setDBSChecked] = useState(false);\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [addressLine1, setAddressLine1] = useState(\"\")\r\n    const [addressLine2, setAddressLine2] = useState(\"\")\r\n    const [countyName, setCountyName] = useState(\"\");\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [addressList, setAddressList] = useState(\"\");\r\n    const [postCodeSearched, setpostCodeSearched] = useState(false);\r\n    const [errors, setErrors] = useState(\"\")\r\n    const[id, setId] = useState(\"\")\r\n    const[isVolunteer, setIsVolunteer] = useState(false)\r\n    const [errorpostcode, setErrorpostcode] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const [open, setOpen] = React.useState(false);\r\n    const [notifyMsg, setNotifyMsg] = useState({\r\n        isOpen: false,\r\n        message: \" \",\r\n        type: \" \",\r\n    });\r\n    // const param = useParams();\r\n    // const user = param.user;\r\n     \r\n    \r\n    useEffect(() => {\r\n          axios.get('/api/accounts/get_user_by_id/',\r\n            {\r\n                params : { uid : uID }\r\n            })\r\n            .then(\r\n                (response) => {\r\n                    const responseData = (response.data[0]);\r\n                    console.log(responseData);\r\n                    const userDataSet = {\r\n                        firstName : `${responseData.first_name}`,\r\n                        lastName : `${responseData.last_name}`,\r\n                        dateOfBirth: `${responseData.date_of_birth}`,\r\n                        phoneNumber : `${responseData.phone_number}`,\r\n                        postcode: `${responseData.post_code}`,\r\n                        address1 : `${responseData.address_line_1}`,\r\n                        address2 : `${responseData.address_line_2}`,\r\n                        city : `${responseData.city}`,\r\n                        county : `${responseData.county}`,\r\n                        email : `${responseData.email}`\r\n                    }\r\n                    \r\n                    setFormData({ lastName : (userDataSet.lastName), firstName: (userDataSet.firstName), dateOfBirth: (userDataSet.dateOfBirth),\r\n                    postcode: (userDataSet.postcode), phoneNumber : (userDataSet.phoneNumber) , address1: (userDataSet.address1), address2: (userDataSet.address2),\r\n                    city: (userDataSet.city), county: (userDataSet.county), email: (userDataSet.email)})\r\n                    setId(responseData.id)\r\n                    console.log(responseData.is_volunteer)\r\n                    setIsVolunteer(responseData.is_volunteer)\r\n                    setDBSChecked(responseData.dbs)\r\n                    console.log(responseData.dbs)\r\n                    console.log(formData)\r\n                    console.log(isVolunteer+' '+DBSChecked);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(\"error\")\r\n                    console.log(error.request);\r\n                    console.log(error.config);\r\n                    console.log(error.message);\r\n    \r\n                });            \r\n        }, [uID]);\r\n        \r\n       \r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n    const handleChecked = (e) => {\r\n        console.log('inside check handle'+DBSChecked)\r\n        setDBSChecked(e.target.checked)\r\n        console.log('after setting falsefor dbs '+DBSChecked)\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        const addLine1 = (addressLine1 === '' ? (address1Ref.current.value) : addressLine1)\r\n        const addLine2 = (addressLine2 === '' ? (address2Ref.current.value) : addressLine2)\r\n        const addCity = (cityName === '' ? (cityRef.current.value) : cityName)\r\n        const addCounty = (countyName === '' ? (countyRef.current.value) : countyName)\r\n        const dob = (dateOfBirth === undefined ? '1900-00-00': dateOfBirth)\r\n        const mail = (errors === ''? email : currentUser.email)\r\n        console.log(mail)\r\n        console.log(addLine1 + '' + addLine2 + ' ' + addCity+' '+addCounty)\r\n        console.log(emailRef.current.value)\r\n        console.log('dbs checked before sending to db is '+DBSChecked)\r\n        if(emailRef.current.value === \"\" || emailRef.current.value === null) {\r\n            // setMessage(\"Data has been updated successfully\")\r\n                console.log(formData)\r\n        }\r\n        else {\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setErrors(\"Passwords does not match\")\r\n        }\r\n        const promises = []\r\n        setLoading(true)\r\n        setErrors(\"\")\r\n          if  (emailRef.current.value !== currentUser.email) { \r\n            //   setFormData({ email : (emailRef.current.value) }\r\n              promises.push(updateEmail(emailRef.current.value))\r\n          }\r\n          if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n          }\r\n      \r\n          Promise.all(promises)\r\n            .then(() => {\r\n            //   history.push(\"/helpwhoneeds/\")\r\n            \r\n            })\r\n            .catch((error) => {\r\n              setErrors(error.message)\r\n              console.log(errors)\r\n            })\r\n            .finally(() => {\r\n              setLoading(false)\r\n            }) \r\n        }\r\n        axios.patch('/api/accounts/'+id+'/',\r\n        \r\n         { \r\n            first_name: `${formData.firstName}`,\r\n            last_name: `${formData.lastName}`,\r\n            email: `${mail}`,\r\n            date_of_birth: `${dob}`,\r\n            phone_number: `${formData.phoneNumber}`,\r\n            post_code: `${formData.postcode}`,\r\n            address_line_1: `${addLine1}`,\r\n            address_line_2: `${addLine2}`,\r\n            city: `${addCity}`,\r\n            county: `${addCounty}`,\r\n            dbs: DBSChecked,\r\n         },\r\n        )\r\n       .then(function (response) {\r\n        console.log(response);\r\n        setSuccessMessage(\"Data has been updated successfully\")\r\n        console.log('dbs when on databse is'+DBSChecked)\r\n        console.log(successMessage)\r\n        // history.push(\"/profile/\")\r\n      })\r\n       .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n     console.log(successMessage)\r\n    }\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        axios.get(`https://api.getAddress.io/find/${postcodeRef.current.value}?api-key=${process.env.REACT_APP_POSTCODE_API_KEY}`)\r\n          .then(function (response) {\r\n            const responseData = response.data\r\n            setAddressList(responseData.addresses)\r\n            addressList === ' ' ? setErrorpostcode('No addresses found at the given post code') :\r\n              setpostCodeSearched(true)\r\n            console.log(addressList)\r\n          })\r\n          .catch(error => {\r\n            setNotifyMsg({\r\n                isOpen: true,\r\n                message:\r\n                    \"No addresses found at the given post code\",\r\n                type: \"error\",\r\n            })\r\n            console.log(errorpostcode);\r\n          })\r\n      }\r\n      const updateAddress = (e) => {\r\n        const valueList = [...e.target.selectedOptions].map(opt => opt.value);\r\n        if ({ valueList } !== '') {\r\n          let addressStore = valueList.toString().split(',')\r\n          console.log(addressStore)\r\n          setAddressLine1(addressStore[0])\r\n          setAddressLine2(addressStore[1])\r\n          setCityName(addressStore[5])\r\n          setCountyName(addressStore[6])\r\n        }\r\n      }    \r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n        <div style={{ width: \"80vw\" }}> \r\n            <h4 align=\"center\"> My Profile</h4>\r\n             { !errors && successMessage && <Alert severity=\"success\">\r\n                <AlertTitle>{successMessage}</AlertTitle>\r\n            </Alert>}\r\n            { errors && <Alert severity=\"error\">\r\n                <AlertTitle>{errors}</AlertTitle>\r\n            </Alert>}\r\n            <Grid container flex-start=\"left\" >\r\n                <p style={{ paddingLeft: 8 }}>Please enter your details here</p> </Grid>\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                \r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField                        \r\n                            id=\"firstName\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            label=\"First name\"\r\n                            variant=\"outlined\"\r\n                            // inputRef ={firstnameRef}\r\n                            onChange={handleChange}\r\n                            value={firstName||''}\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} >\r\n                        <TextField                            \r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            label=\"Last name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            value={lastName||''}\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"family-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"dateOfBirth\"\r\n                            name=\"dateOfBirth\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            label=\"Date Of Birth\"\r\n                            onChange={handleChange}\r\n                            value={dateOfBirth||''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"phoneNumber\"\r\n                        name=\"phoneNumber\"\r\n                        // type=\"number\"\r\n                        label=\"Phone Number\"\r\n                        onChange={handleChange}\r\n                        value={phoneNumber || ''}\r\n                        variant=\"outlined\"\r\n                        inputProps={{ maxLength: 12 }}\r\n                        style={useStyles.textFld}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <ButtonGroup>\r\n                    <TextField\r\n                        required\r\n                        id=\"postcode\"\r\n                        name=\"postcode\"\r\n                        label=\"Post code\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        inputRef={postcodeRef}\r\n                        value={postcode || ''}\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\" postal-code\" />\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Button variant=\"outlined\" type='submit' onClick={handleClick}>Find Address</Button>\r\n                    </Grid></ButtonGroup>  </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                    {(postCodeSearched) &&\r\n                    <FormControl variant=\"outlined\" style={{ width: '100%', height: 40, paddingLeft: 8 }}>\r\n                        <InputLabel htmlFor=\"outlined-age-native-simple\">Select Addresses</InputLabel>\r\n                        <Select\r\n                        native\r\n                        id=\"demo-simple-select-outlined\"\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        style={useStyles.textFld}\r\n                        variant=\"outlined\"\r\n                        label=\"Select Addresses\"\r\n                        onChange={updateAddress}\r\n                        >\r\n                        {addressList.map(addressArray => <option key={addressArray} value={addressArray}>{addressArray}</option>)}\r\n                        </Select>\r\n                    </FormControl>}\r\n                     {errorpostcode &&  <Notification notify={notifyMsg} setNotify={setNotifyMsg} verticalPosTop={false}/>}\r\n                \r\n                     {/* <Alert severity=\"error\">This is an error message!</Alert>\r\n                    //                 <Alert severity=\"error\">\r\n                    // <AlertTitle>Error: {errorpostcode}</AlertTitle>\r\n                    // </Alert> */}\r\n                    \r\n                </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    {(!postCodeSearched) &&\r\n                    <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        onChange={handleChange}\r\n                        inputRef={address1Ref}\r\n                        value={address1||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"address-line1\"\r\n                    />}\r\n                    {(postCodeSearched) &&\r\n                    <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        value={addressLine1||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"address-line1\"\r\n                    />\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    {(!postCodeSearched) &&\r\n                    <TextField\r\n                        id=\"address2\"\r\n                        name=\"address2\"\r\n                        label=\"Address line 2\"\r\n                        onChange={handleChange}\r\n                        inputRef={address2Ref}\r\n                        value={address2||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"address-line2\"\r\n                    />}\r\n                    {(postCodeSearched) &&\r\n                    <TextField\r\n                        id=\"address2\"\r\n                        name=\"address2\"\r\n                        label=\"Address line 2\"\r\n                        value={addressLine2||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"address-line2\"\r\n                    />\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    {(!postCodeSearched) &&\r\n                    <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        inputRef={cityRef}\r\n                        value={city||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"city\"\r\n                    />}\r\n                    {(postCodeSearched) &&\r\n                    <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        value={cityName||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"city\"\r\n                    />\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    {(!postCodeSearched) &&\r\n                    <TextField\r\n                        id=\"county\"\r\n                        name=\"county\"\r\n                        label=\"County\"\r\n                        onChange={handleChange}\r\n                        inputRef={countyRef}\r\n                        value={county||''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"county\"\r\n                    />}\r\n                    {(postCodeSearched) &&\r\n                    <TextField\r\n                        id=\"county\"\r\n                        name=\"county\"\r\n                        label=\"County\"\r\n                        value={countyName || ''}\r\n                        variant=\"outlined\"\r\n                        style={useStyles.textFld}\r\n                        autoComplete=\"county\"\r\n                    />\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type = \"email\"\r\n                            label=\"Email Address\"\r\n                            inputRef={emailRef || ''}\r\n                            onChange={handleChange}\r\n                            value={email || ''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type = \"password\"\r\n                            label=\"Password\"\r\n                            inputRef={passwordRef}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"passwordConfirm\"\r\n                            name=\"city\"\r\n                            type = \"password\"\r\n                            label=\"Confirm Password\"\r\n                            inputRef={passwordConfirmRef}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                  \r\n                    <Grid item xs={12}>\r\n\r\n                        {(isVolunteer === true) && (DBSChecked === true) &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"secondary\" style={{ marginLeft: '5px' }} name=\"DBSChecked\" value={DBSChecked} checked=\"checked\" onChange={handleChecked}  />}\r\n                                label=\"I have a valid DBS certificate\"\r\n                            />}\r\n                          {(isVolunteer === true) && (DBSChecked === false) &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"secondary\" style={{ marginLeft: '5px' }} name=\"DBSChecked\" value={DBSChecked} onChange={handleChecked}  />}\r\n                                label=\"I have a valid DBS certificate\"\r\n                            />}  \r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={3} direction=\"row\">\r\n                    <ButtonGroup className=\"w-100 text-center mt-2\">\r\n                        <Grid item xs={12} >\r\n                            <Button disabled = {loading} variant=\"contained\" style={useStyles.button} className=\"btn btn-primary w-100\" type=\"submit\">Update</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Button variant=\"contained\" style={useStyles.button} className=\"btn btn-primary w-100\" component={Link} to=\"/helpwhoneeds/\" >Cancel</Button>\r\n                        </Grid>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n        \r\n            </form> \r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const classes = useStyles();  \r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const param = useParams();\r\n  const user = param.user;\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for password reset instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Forgot Password </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n            { message && <Alert severity=\"success\">\r\n            <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n            <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    // autoFocus\r\n                />\r\n                <Button            \r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Reset Password\r\n                </Button>\r\n              </form>\r\n             <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            Go to <Link to={`/login/${user}`} variant=\"body2\">\r\n                                Sign In</Link> \r\n                            </div>\r\n                        </Grid>\r\n              </Grid>\r\n              <Grid container>          \r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-3\">\r\n                            New User ?<Link to={`/signup/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                       \r\n        </Grid>\r\n\r\n    </div>  <Box mt={8}>\r\n    <Copyright />\r\n</Box>\r\n</Container>\r\n)\r\n}","import React, { useState, useRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\"\r\nimport { ButtonGroup, Input } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport Notification from \"../structure/Notification\"\r\n\r\nconst useStyles = {\r\n  textFld: { width: '85%', height: 40, paddingLeft: 8 },\r\n  button: {\r\n    border: '4px',\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default function RegistrationPage(props) {\r\n\r\n  const initialInputState = {\r\n    firstName: \"\", lastName: \"\", dateOfBirth: \"\", phoneNumber: \"\", postcode: \"\", address1: \"\", address2: \"\",city: \"\", county: \"\"\r\n  }\r\n  const [formData, setFormData] = useState({ initialInputState })\r\n  const { firstName, lastName, dateOfBirth, phoneNumber, postcode, address1, address2, city, county } = formData\r\n  const [message, setMessage] = useState(\"\")\r\n  const postcodeRef = useRef()\r\n  const address1Ref = useRef()\r\n  const address2Ref = useRef()\r\n  const cityRef = useRef()\r\n  const countyRef = useRef()\r\n  const [countyName, setCountyName] = useState(\"\");\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const param = useParams();\r\n  const user = param.user;\r\n  const { currentUser } = useAuth()\r\n  const uID = currentUser.uid\r\n  const email = currentUser.email\r\n  const [DBSchecked, setDBSChecked] = useState(false);\r\n  const [addressLine1, setAddressLine1] = useState(\"\")\r\n  const [addressLine2, setAddressLine2] = useState(\"\")\r\n  const [addressList, setAddressList] = useState(\"\");\r\n  const [errors, setErrors] = useState(\"\");\r\n  const [postCodeSearched, setpostCodeSearched] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [notifyMsg, setNotifyMsg] = useState({\r\n      isOpen: false,\r\n      message: \" \",\r\n      type: \" \",\r\n  });\r\n  // const [isVolunteer, setIsVolunteer] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const handleChecked = (e) => {\r\n    setDBSChecked(e.target.checked)\r\n    console.log(DBSchecked)\r\n  }\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    const is_volunteer = (user === 'volunteer' ? true : false)\r\n    console.log(is_volunteer + ' ' + county + ' ' + uID + ' ' + DBSchecked);\r\n    const addLine1 = (addressLine1 === '' ? (address1Ref.current.value) : addressLine1)\r\n    const addLine2 = (addressLine2 === '' ? (address2Ref.current.value) : addressLine2)\r\n    const addCity = (cityName === '' ? (cityRef.current.value) : cityName)\r\n    const addCounty = (countyName === '' ? (countyRef.current.value) : countyName)\r\n    console.log(addLine1 + '' + addLine2 + ' ' + addCity+' '+addCounty)\r\n\r\n    axios.post(\"/api/accounts/\", {\r\n      first_name: `${formData.firstName}`,\r\n      last_name: `${formData.lastName}`,\r\n      uid: `${uID}`,\r\n      email: `${email}`,\r\n      date_of_birth: `${formData.dateOfBirth}`,\r\n      phone_number: `${formData.phoneNumber}`,\r\n      post_code: `${formData.postcode}`,\r\n      address_line_1: `${addLine1}`,\r\n      address_line_2: `${addLine2}`,\r\n      city: `${addCity}`,\r\n      county: `${addCounty}`,\r\n      dbs: `${DBSchecked}`,\r\n      is_volunteer: `${is_volunteer}`,\r\n    })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setMessage(\"Data has been saved successfully\")\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const API_Key = process.env.REACT_APP_POSTCODE_API_KEY\r\n    axios.get(`https://api.getAddress.io/find/${postcodeRef.current.value}?api-key=${API_Key}`)\r\n      .then(function (response) {\r\n        const responseData = response.data\r\n        setAddressList(responseData.addresses)\r\n        addressList === ' ' ? setErrors('No addresses found at the given post code') :\r\n          setpostCodeSearched(true)\r\n        console.log(addressList)\r\n      })\r\n      .catch(error => {\r\n        setErrors('No addresses found at the given post code')\r\n        setNotifyMsg({\r\n          isOpen: true,\r\n          message:\r\n              \"No addresses found at the given post code\",\r\n          type: \"error\",\r\n      })\r\n        console.log(error);\r\n      })\r\n  }\r\n  const updateAddress = (e) => {\r\n    const valueList = [...e.target.selectedOptions].map(opt => opt.value);\r\n    if ({ valueList } !== '') {\r\n      let addressStore = valueList.toString().split(',')\r\n      console.log(addressStore)\r\n      setAddressLine1(addressStore[0])\r\n      setAddressLine2(addressStore[1])\r\n      setCityName(addressStore[5])\r\n      setCountyName(addressStore[6])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <h2 align=\"center\"> Registration form</h2>\r\n      { message && <Alert severity=\"success\">\r\n        <AlertTitle>{message}</AlertTitle>\r\n      </Alert>}\r\n      <Grid container flex-start=\"left\" >\r\n        <p style={{ paddingLeft: 8 }}>Please enter your details here</p> </Grid>\r\n\r\n      <form onSubmit={handleSubmit} >\r\n        <Grid container spacing={3} >\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              value={firstName || ''}\r\n              inputProps={{ maxLength: 20 }}\r\n              style={useStyles.textFld}\r\n              autoComplete=\"given-name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} >\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              label=\"Last name\"\r\n              onChange={handleChange}\r\n              value={lastName || ''}\r\n              inputProps={{ maxLength: 20 }}\r\n              variant=\"outlined\"\r\n              style={useStyles.textFld}\r\n              autoComplete=\"family-name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"dateOfBirth\"\r\n              name=\"dateOfBirth\"\r\n              type=\"date\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              label=\"Date Of Birth\"\r\n              onChange={handleChange}\r\n              value={dateOfBirth || ''}\r\n              variant=\"outlined\"\r\n              style={useStyles.textFld}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              id=\"phoneNumber\"\r\n              name=\"phoneNumber\"\r\n              type=\"number\"\r\n              label=\"Phone Number\"\r\n              onChange={handleChange}\r\n              value={phoneNumber || ''}\r\n              variant=\"outlined\"\r\n              inputProps={{ maxLength: 12 }}\r\n              style={useStyles.textFld}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n\r\n            <ButtonGroup>\r\n              <TextField\r\n                required\r\n                id=\"postcode\"\r\n                name=\"postcode\"\r\n                label=\"Post code\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                inputRef={postcodeRef}\r\n                value={postcode || ''}\r\n                style={useStyles.textFld}\r\n                autoComplete=\" postal-code\" />\r\n              <Grid item xs={12} sm={6}>\r\n                <Button variant=\"outlined\" type='submit' onClick={handleClick}>Find Address</Button>\r\n              </Grid></ButtonGroup>  </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            {(postCodeSearched) &&\r\n              <FormControl variant=\"outlined\" style={{ width: '100%', height: 40, paddingLeft: 8 }}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">Select Addresses</InputLabel>\r\n                <Select\r\n                  native\r\n                  id=\"demo-simple-select-outlined\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  style={useStyles.textFld}\r\n                  variant=\"outlined\"\r\n                  label=\"Select Addresses\"\r\n                  onChange={updateAddress}\r\n                >\r\n                  {addressList.map(addressArray => <option key={addressArray} value={addressArray}>{addressArray}</option>)}\r\n                </Select>\r\n              </FormControl>}\r\n              {errors &&  <Notification notify={notifyMsg} setNotify={setNotifyMsg} verticalPosTop={false}/>}\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            {(!postCodeSearched) &&\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                onChange={handleChange}\r\n                inputRef={address1Ref}\r\n                value={address1||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"address-line1\"\r\n              />}\r\n            {(postCodeSearched) &&\r\n              <TextField\r\n                required\r\n                id=\"address1\"\r\n                name=\"address1\"\r\n                label=\"Address line 1\"\r\n                value={addressLine1||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"address-line1\"\r\n              />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {(!postCodeSearched) &&\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                onChange={handleChange}\r\n                inputRef={address2Ref}\r\n                value={address2||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"address-line2\"\r\n              />}\r\n            {(postCodeSearched) &&\r\n              <TextField\r\n                id=\"address2\"\r\n                name=\"address2\"\r\n                label=\"Address line 2\"\r\n                value={addressLine2||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"address-line2\"\r\n              />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {(!postCodeSearched) &&\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                onChange={handleChange}\r\n                inputRef={cityRef}\r\n                value={city||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"city\"\r\n              />}\r\n            {(postCodeSearched) &&\r\n              <TextField\r\n                required\r\n                id=\"city\"\r\n                name=\"city\"\r\n                label=\"City\"\r\n                value={cityName||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"city\"\r\n              />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {(!postCodeSearched) &&\r\n              <TextField\r\n                id=\"county\"\r\n                name=\"county\"\r\n                label=\"County\"\r\n                onChange={handleChange}\r\n                inputRef={countyRef}\r\n                value={county||''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"county\"\r\n              />}\r\n            {(postCodeSearched) &&\r\n              <TextField\r\n                id=\"county\"\r\n                name=\"county\"\r\n                label=\"County\"\r\n                value={countyName || ''}\r\n                variant=\"outlined\"\r\n                style={useStyles.textFld}\r\n                autoComplete=\"county\"\r\n              />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n\r\n            {(`${user}` === 'volunteer') &&\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"secondary\" style={{ marginLeft: '5px' }} name=\"DBSchecked\" value={DBSchecked} onChange={handleChecked} />}\r\n                label=\"I have a valid DBS certificate\"\r\n              />}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={3} direction=\"row\">\r\n          <Grid item xs={12} align=\"center\">\r\n            <Button variant=\"contained\" className=\"btn btn-primary w-100\" type=\"submit\">Submit</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = (theme) => ({\r\n    textFld: { width: \"85%\", height: 40, paddingLeft: 8 },\r\n    button: {\r\n        border: \"4px\",\r\n        color: \"default\",\r\n        fontWeight: \"bold\",\r\n        marginLeft: 10,\r\n        marginTop: \"10px\",\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: \"auto\",\r\n        width: \"fit-content\",\r\n    },\r\n});\r\n\r\nconst TaskDialog = ({ open, handleClose, title, data }) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullScreen={fullScreen}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={useStyles.form} noValidate>\r\n                        {data && (\r\n                            <Grid container spacing={3}>\r\n                                {data.firstName} {data.lastName}\r\n                                <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                        id=\"taskType\"\r\n                                        type=\"string\"\r\n                                        label=\"Task\"\r\n                                        value={data.taskType}\r\n                                        variant=\"outlined\"\r\n                                        style={useStyles.textFld}\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12}>\r\n                                    <TextField\r\n                                        id=\"taskDetails\"\r\n                                        type=\"string\"\r\n                                        label=\"Task Summary\"\r\n                                        value={data.taskDetails}\r\n                                        variant=\"outlined\"\r\n                                        multiline\r\n                                        rows={6}\r\n                                        style={useStyles.textFld}\r\n                                        autoComplete=\"family-name\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}></Grid>\r\n                                <Grid item xs={12} sm={6}></Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskDialog;\r\n","import { Snackbar, makeStyles } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        top: theme.spacing(15),\r\n    },\r\n}));\r\n\r\nfunction Notification(props) {\r\n    const classes = useStyles();\r\n    const { notify, setNotify } = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={2000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert severity={notify.type} onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    dailog: {\r\n        padding: theme.spacing(2),\r\n        position: \"absolute\",\r\n        top: theme.spacing(15),\r\n    },\r\n    dailogContent: {\r\n        textAlign: \"center\",\r\n    },\r\n    dailogAction: {\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n}));\r\n\r\nconst ConfirmDialog = (props) => {\r\n    const classes = useStyles();\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen}\r\n            className={classes.dailog}>\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">{confirmDialog.title}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dailogContent}>\r\n                <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dailogAction}>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={confirmDialog.onConfirm}\r\n                >\r\n                    OK\r\n        </Button>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={() => setConfirmDialog({ ...ConfirmDialog, isOpen: false })}\r\n                >\r\n                    Cancel\r\n        </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default ConfirmDialog;","import React from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport moment from \"moment\";\r\n\r\nconst SPACED_DATE_FORMAT = \"DD MMM YYYY\";\r\n\r\nconst options = {\r\n    filterType: \"multiselect\",\r\n    selectableRows: \"none\", //can also be single/mulitple\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 15, 20],\r\n    print: false,\r\n    download: false,\r\n    sortOrder: {\r\n        name: \"start\",\r\n        direction: \"asc\",\r\n    },\r\n};\r\n\r\nexport default function TaskListTable({\r\n    taskListData,\r\n    isMyTask,\r\n    handleAccept,\r\n    handleView,\r\n    handleReject,\r\n    handleComplete,\r\n}) {\r\n    const theme = () =>\r\n        createMuiTheme({\r\n            overrides: {\r\n                MuiDataTable: {\r\n                    root: {\r\n                        width: \"min-content\",\r\n                    },\r\n                    responsiveScroll: {\r\n                        maxHeight: \"none\", //not working\r\n                    },\r\n                },\r\n                MUIDataTableToolbar: {\r\n                    root: {\r\n                        background: \"#AAF\",\r\n                    },\r\n                },\r\n                MUIDataTableBodyCell: {\r\n                    root: {\r\n                        overflow: \"hidden\",\r\n                        whiteSpace: \"nowrap\",\r\n                        textOverflow: \"ellipsis\",\r\n                        position: \"relative\",\r\n                        backgroundColor: \"#FFF\",\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    const taskCols = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            options: {\r\n                display: false,\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"volId\",\r\n            label: \"volunteer ID\",            \r\n            options: { display: false, sort: false, filter: false, viewColumns: false },\r\n        },\r\n        {\r\n            name: \"status\",\r\n            label: \"State\",         \r\n            options: {\r\n                display: false,\r\n                filter: false,\r\n                sort: false,\r\n                viewColumns: false,\r\n                width: \"10%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"First name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"Full Name\",\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    //console.log(tableMeta.rowData, '......');\r\n                    return (\r\n                        <div>\r\n                            {tableMeta.rowData[3]} {tableMeta.rowData[4]}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"start\",\r\n            label: \"Start Time\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n                width: \"10%\",\r\n\r\n                customBodyRender: (value) => moment(value).format(\"lll\"),\r\n            },\r\n        },\r\n        {\r\n            name: \"end\",\r\n            label: \"End Time\",\r\n            options: {\r\n                filter: false,\r\n                sort: true,\r\n                width: \"10%\",\r\n                customBodyRender: (value) => moment(value).format(\"lll\"),\r\n            },\r\n        },\r\n        {\r\n            name: \"start\",\r\n            label: \"Start Date\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                display: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value) =>\r\n                    moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"end\",\r\n            label: \"End Date\",           \r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                display: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value) =>\r\n                    moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"distance\",\r\n            label: \"Dist\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"5%\",\r\n            },\r\n        },\r\n\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask === true ? true : false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    //const volId = tableMeta.rowData[1];\r\n                    const status = tableMeta.rowData[2];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            //disabled={(volId === null ||status === \"Completed\") ? true : false}\r\n                            disabled={status !== \"DN\" && status !== \"CL\" ? false : true}\r\n                            style={{ marginLeft: 2, minWidth: \"70px\" }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                handleReject(value);\r\n                            }}\r\n                        >\r\n                            {status !== \"CL\" ? \"Reject\" : \"Cancelled\"}\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Confirm\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask === true ? true : false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    const status = tableMeta.rowData[2];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            size=\"small\"\r\n                            // disabled={ status !== \"Completed\" ? false : true}\r\n                            disabled={status !== \"DN\" && status !== \"CL\" ? false : true}\r\n                            style={{ marginLeft: 2, minWidth: \"90px\" }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                handleComplete(value);\r\n                            }}\r\n                        >\r\n                            {status !== \"DN\" ? \"COMPLETE\" : \"DONE\"}\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask ? false : true,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    //const volId = tableMeta.rowData[1];\r\n                    const status = tableMeta.rowData[2];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            //disabled={volId === null ? false : true}\r\n                            disabled={status !== \"OP\" ? true : false}\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                backgroundColor: status !== \"OP\" ? \"lightgrey\" : \"green\",\r\n                            }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                //console.log(tableMeta.rowData[1]);\r\n                                console.log(\"value\");\r\n                                console.log(value);\r\n                                handleAccept(value);\r\n                            }}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                minWidth: \"70px\",\r\n                            }}\r\n                            value={value}\r\n                            onClick={(e) => {\r\n                                handleView(e, value);\r\n                            }}\r\n                        >\r\n                            View\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <MuiThemeProvider theme={theme()}>\r\n            <MUIDataTable\r\n                title={isMyTask === false ? \"New Tasks\" : \"My Pending Tasks\"}\r\n                data={taskListData}\r\n                columns={taskCols}\r\n                options={options}\r\n            />\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TaskDialog from \"./TaskDetail\";\r\nimport Notification from \"./Notification\";\r\nimport ConfirmDialog from \"./CofirmDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TaskListTable from \"./TaskListTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    h5: {\r\n        color: \"#4C4B51\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nexport default function VolunteerSearchTask() {\r\n    const { currentUser } = useAuth();\r\n    const userUID = currentUser.uid;\r\n    console.log(userUID);\r\n    const [userId, setUserId] = useState(null);\r\n    const [pendingTasks, setPendingTasks] = useState([]);\r\n    const [dataFetched, setDataFetched] = useState(false);\r\n    const[taskStateUpdated, setTaskStateUpdated] = useState(true);\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/accounts/get_user_by_id/\",\r\n            {\r\n                params : { uid : userUID }\r\n            })\r\n            .then((response) => {\r\n                const data = response.data;\r\n                console.log(\"userdata\");\r\n                console.log(data);\r\n                console.log(data[0]);\r\n                const user = {\r\n                    id: `${data[0].id}`,\r\n                };\r\n\r\n                console.log(\"userId by uuid\");\r\n                console.log(user.id);\r\n                setUserId(user.id);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"error\");\r\n                console.log(error.request);\r\n                console.log(error.config);\r\n                console.log(error.message);\r\n            });\r\n        console.log(\"set UserId\");\r\n        console.log(userId);\r\n    }, [userUID, userId]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/tasks/get_vol_task\", {\r\n                params: {\r\n                    volId: userId,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                const data = response.data;\r\n                console.log(data);\r\n                const allTask = data.map((task) => {\r\n                    return {\r\n                        id: `${task.id}`,\r\n                        lastName: `${task.requestee_details.last_name}`,\r\n                        firstName: `${task.requestee_details.first_name}`,\r\n                        taskType: `${task.task_type}`,\r\n                        taskDetails: `${task.description}`,\r\n                        start: `${task.start_time}`,\r\n                        end: `${task.end_time}`,\r\n                        distance: 1,//`${task.id}`,\r\n                        volId: `${task.volunteer}`,\r\n                        status: `${task.status}`,\r\n                    };\r\n                });\r\n                setPendingTasks(allTask);\r\n                setDataFetched(true);\r\n                console.log(\"tasks\");\r\n                console.log(allTask);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(\"error\");\r\n                console.log(error.request);\r\n                console.log(error.config);\r\n                console.log(error.message);\r\n            });\r\n    }, [userId]);\r\n\r\n    console.log(\"database json out \");\r\n    console.log(pendingTasks);\r\n    const classes = useStyles();\r\n\r\n    const myTasks = pendingTasks\r\n        ? pendingTasks.filter(\r\n            (task) => task.status === \"AS\" //|| task.status === \"CL\" //&& Number(task.volId) === 3\r\n        )\r\n        : null;\r\n    const unassignedTasks = pendingTasks.filter(\r\n        (task) =>\r\n            //task.volId === null\r\n            task.status === \"OP\"\r\n    );\r\n\r\n    const [hideMyTask, setHideMyTask] = useState(false);\r\n    const [hideNewTask, setHideNewTask] = useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [dialogData, setDialogData] = React.useState(null);\r\n    const [notifyMsg, setNotifyMsg] = useState({\r\n        isOpen: false,\r\n        message: \" \",\r\n        type: \" \",\r\n    });\r\n    const [confirmDialog, setConfirmDialog] = useState({\r\n        isOpen: false,\r\n        title: \"\",\r\n        subTitle: \"\",\r\n    });\r\n\r\n    const handleClickOpen = (e, dialogData) => {\r\n        setShowDialog(true);\r\n        setDialogData(dialogData);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShowDialog(false);\r\n        setDialogData(null);\r\n    };\r\n\r\n    const handleView = (e, taskId) => {\r\n        const selectedTask = pendingTasks.find((task) => task.id === taskId);\r\n        console.log(selectedTask);\r\n        if (selectedTask != null) {\r\n            handleClickOpen(e, selectedTask);\r\n        }\r\n    };\r\n\r\n    const handleReject = (taskId) => {\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Are you sure to return your assigned Task?\",\r\n            subTitle:\r\n                \"Once rejected it will be unassigned from you.To reassign the task you need to go to search task and accept it again.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n                setTaskStateUpdated(false);\r\n                axios\r\n                    .get(\"http://localhost:8000/api/tasks/\" + taskId + \"/\")\r\n                    .then((response) => {\r\n                        const data = response.data;\r\n                        console.log(data);\r\n                        const task = response.data;\r\n                        const selectedTask = {\r\n                            status: `${task.status}`,\r\n                        };\r\n                        console.log(\"slected tasks\");\r\n                        console.log(selectedTask);\r\n                        if (selectedTask.status === \"AS\") {\r\n                            axios\r\n                                .patch(\"http://localhost:8000/api/tasks/\" + taskId + \"/\", {\r\n                                    status: \"OP\",\r\n                                    volId: null,\r\n                                    isUpdatedByVol: true,\r\n                                })\r\n                                .then(function (response) {\r\n                                    console.log(response);\r\n                                    //change status is frontend\r\n                                    const returnTask = pendingTasks.map((task) =>\r\n                                        task.id === taskId ? { ...task, volId: null, status: \"OP\" } : task\r\n                                    );\r\n                                    setPendingTasks(returnTask);\r\n                                    console.log(\"myTask\");\r\n                                    console.log(myTasks);\r\n                                    console.log(\"assignTasks\");\r\n                                    console.log(unassignedTasks);\r\n                                    console.log(pendingTasks);\r\n                                    setTaskStateUpdated(true);\r\n                                    setNotifyMsg({\r\n                                        isOpen: true,\r\n                                        message:\r\n                                            \"Task is unssigned from you. Email notification will be sent shortly.\",\r\n                                        type: \"warning\",\r\n                                    });\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(error);\r\n                                });\r\n                        } else {\r\n                            console.log(\"alert task already returned\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(\"error\");\r\n                        console.log(error.request);\r\n                        console.log(error.config);\r\n                        console.log(error.message);\r\n                    });                 \r\n            },\r\n        });\r\n    };\r\n    \r\n    const handleAccept = (taskId) => {\r\n        console.log(\"Accepted userID\");\r\n        console.log(userId);\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Do you agree to accept this task?\",\r\n            subTitle:\r\n                \"Once accepted it will be assigned to you.To return the task you need to go to your task list and reject it.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n                setTaskStateUpdated(false);\r\n                axios\r\n                    .get(\"http://localhost:8000/api/tasks/\" + taskId + \"/\")\r\n                    .then((response) => {\r\n                        const data = response.data;\r\n                        console.log(data);\r\n                        const task = response.data;\r\n                        const selectedTask = {\r\n                            status: `${task.status}`,\r\n                        };\r\n                        console.log(\"slected tasks\");\r\n                        console.log(selectedTask);\r\n                        if (selectedTask.status === \"OP\") {\r\n                            axios\r\n                                .patch(\"http://localhost:8000/api/tasks/\" + taskId + \"/\", {\r\n                                    status: \"AS\",\r\n                                    volId: userId,\r\n                                    isUpdatedByVol: true,\r\n                                })\r\n                                .then(function (response) {\r\n                                    console.log(response);\r\n\r\n                                    const assignTask = pendingTasks.map((task) =>\r\n                                        task.id === taskId\r\n                                            ? { ...task, volId: userId, status: \"AS\" }\r\n                                            : task\r\n                                    );\r\n                                    setPendingTasks(assignTask);\r\n                                    console.log(\"assignTasks\");\r\n                                    console.log(unassignedTasks);\r\n                                    console.log(\"myTask\");\r\n                                    console.log(myTasks);\r\n                                    console.log(pendingTasks);\r\n                                    setTaskStateUpdated(true);\r\n                                    setNotifyMsg({\r\n                                        isOpen: true,\r\n                                        message:\r\n                                            \"Task is successfully assigned to you.Email notification will be sent shortly.\",\r\n                                        type: \"success\",\r\n                                    });\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(error);\r\n                                });\r\n                        } else {\r\n                            setTaskStateUpdated(true);\r\n                            setNotifyMsg({\r\n                                isOpen: true,\r\n                                message:\r\n                                    \"Task has been already accepted by another volunteer. Please refresh the page to get the latest new tasks\",\r\n                                type: \"error\",\r\n                            });\r\n                            console.log(\"alert task already assigned\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(\"error\");\r\n                        console.log(error.request);\r\n                        console.log(error.config);\r\n                        console.log(error.message);\r\n                    });\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleComplete = (taskId) => {\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Have you completed this task?\",\r\n            subTitle:\r\n                \"Once completed it will be marked as done will be removed from your list.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n                setTaskStateUpdated(false);\r\n                axios\r\n                    .get(\"http://localhost:8000/api/tasks/\" + taskId + \"/\")\r\n                    .then((response) => {\r\n                        const data = response.data;\r\n                        console.log(data);\r\n                        const task = response.data;\r\n                        const selectedTask = {\r\n                            status: `${task.status}`,\r\n                        };\r\n                        console.log(\"slected tasks\");\r\n                        console.log(selectedTask);\r\n                        if (selectedTask.status === \"AS\") {\r\n                            axios\r\n                                .patch(\"http://localhost:8000/api/tasks/\" + taskId + \"/\", {\r\n                                    status: \"DN\",\r\n                                    isUpdatedByVol: true,\r\n                                })\r\n                                .then(function (response) {\r\n                                    console.log(response);\r\n                                    const assignTask = pendingTasks.map((task) =>\r\n                                    task.id === taskId ? { ...task, status: \"DN\" } : task\r\n                                );\r\n                                setPendingTasks(assignTask);\r\n                                console.log(\"assignTasks\");\r\n                                console.log(unassignedTasks);\r\n                                console.log(\"myTask\");\r\n                                console.log(myTasks);\r\n                                console.log(pendingTasks);\r\n                                setTaskStateUpdated(true);\r\n                                setNotifyMsg({\r\n                                    isOpen: true,\r\n                                    message:\r\n                                        \"Task is successfully marked as completed.Email notification will be sent shortly.\",\r\n                                    type: \"success\",\r\n                                });\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(error);\r\n                                });\r\n                        } else {\r\n                            console.log(\"alert task already marked completed\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(\"error\");\r\n                        console.log(error.request);\r\n                        console.log(error.config);\r\n                        console.log(error.message);\r\n                    });               \r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!dataFetched ? (\r\n                <div>\r\n                    <CircularProgress />\r\n                    <CircularProgress color=\"secondary\" />\r\n                </div>\r\n            ) : (\r\n                    <div style={{ height: \"100%\" }}>                 \r\n                \r\n                {!taskStateUpdated && (<div>  <CircularProgress />\r\n                    <CircularProgress color=\"secondary\" /></div>)}\r\n                    \r\n                        <Grid\r\n                            id=\"tasks\"\r\n                            container\r\n                            spacing={2}\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                        >\r\n                            {!hideMyTask && (\r\n                                <Grid className=\"my-tasks\" item xs={12} sm={7} align=\"right\">\r\n                                    <Hidden smUp>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setHideMyTask(true);\r\n                                                setHideNewTask(false);\r\n                                            }}\r\n                                        >\r\n                                            Search New Tasks\r\n                                </Button>{\" \"}\r\n                                    </Hidden>\r\n\r\n                                    <h4 className={classes.h5}>{\"My Assigned Tasks\"}</h4>\r\n                                    <TaskListTable\r\n                                        taskListData={myTasks}\r\n                                        isMyTask={true}\r\n                                        handleAccept={handleAccept}\r\n                                        handleReject={handleReject}\r\n                                        handleView={handleView}\r\n                                        handleComplete={handleComplete}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n\r\n                            {!hideNewTask && (\r\n                                <Grid className=\"new-tasks\" item xs={12} sm={5} align=\"right\">\r\n                                    <Hidden smUp>\r\n                                        {\" \"}\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setHideNewTask(true);\r\n                                                setHideMyTask(false);\r\n                                            }}\r\n                                        >\r\n                                            View My Tasks\r\n                                        </Button>\r\n                                    </Hidden>\r\n                                    <h4 className={classes.h5}>{\"Search New Tasks\"}</h4>\r\n                                    <TaskListTable\r\n                                        taskListData={unassignedTasks}\r\n                                        isMyTask={false}\r\n                                        handleAccept={handleAccept}\r\n                                        handleReject={handleReject}\r\n                                        handleView={handleView}\r\n                                        handleComplete={handleComplete}\r\n                                    />\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n\r\n                        <TaskDialog\r\n                            open={showDialog}\r\n                            handleClose={handleClose}\r\n                            title=\"Task Summary\"\r\n                            data={dialogData}\r\n                        />\r\n                        <Notification notify={notifyMsg} setNotify={setNotifyMsg} />\r\n                        <ConfirmDialog\r\n                            confirmDialog={confirmDialog}\r\n                            setConfirmDialog={setConfirmDialog}\r\n                        />\r\n                    </div>\r\n                )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PetsIcon from '@material-ui/icons/Pets'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy'\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp'\r\n\r\n\r\nconst useStyles =\r\n    makeStyles(\r\n        {\r\n            h1: {\r\n                color: \"#4C4B51\"\r\n            },\r\n            largeButton: {\r\n                border: 5,\r\n                color: \"#FF8E53\",\r\n                padding: \"15px\",\r\n                margin: \"15px\",\r\n                height: 100,\r\n                width: 110,\r\n            },\r\n            largeIcon:\r\n                { fontSize: 60 },\r\n\r\n            label: {\r\n                flexDirection: 'column',\r\n                // color: '#4C4B51'\r\n            },\r\n            icon: {\r\n                fontSize: '32px !important',\r\n                marginBottom: 5\r\n            }\r\n        })\r\n\r\nexport default function NewTaskButtons({handleClickOpen}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return <div className=\"centered\">\r\n\r\n        <h1>I need help with...</h1>\r\n\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"GRO\")}>\r\n            <ShoppingCartIcon className={classes.largeIcon} />\r\n            Shopping\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"PHA\")}>\r\n            <LocalPharmacyIcon className={classes.largeIcon} />\r\n            Pharmacy\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"DOG\")}>\r\n            <PetsIcon className={classes.largeIcon} />\r\n            Dog Walk\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"HOS\")}>\r\n            <LocalHospitalIcon className={classes.largeIcon} />\r\n            Hospital\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"CHAT\")}>\r\n            <PhoneIcon className={classes.largeIcon} />\r\n            Chat\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"ANY\")}>\r\n            <LiveHelpIcon className={classes.largeIcon} />\r\n            Other\r\n        </Button>\r\n\r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    p: { margin: \"10px 2px 10px 2px\" },\r\n    root: {\r\n        padding: \"8px 0px 8px 0px\"\r\n    }\r\n})\r\n\r\nfunction FormDialog({ open, handleClose, taskType, defaultValues, \r\n    updTaskId, updateTaskList, reqId }) {\r\n\r\n    useEffect(() => {\r\n        reset(defaultValues);\r\n    }, [defaultValues])\r\n\r\n\r\n    const dialogHeader = {\r\n        \"GRO\": \"Shopping\",\r\n        \"PHA\": \"Collect medicine\",\r\n        \"DOG\": \"Dog Walking\",\r\n        \"HOS\": \"Visit Hospital Appointment\",\r\n        \"CHAT\": \"Friendly Chat\",\r\n        \"ANY\": \"I need help with ...\",\r\n    }\r\n\r\n    const getFormDate = date => {\r\n        let year = date.getFullYear();\r\n        let month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n        let day = date.getDate().toString().padStart(2, '0');\r\n        return year + '-' + month + '-' + day\r\n    }\r\n\r\n    const { register, handleSubmit, reset, errors, watch, setValue, clearErrors } =\r\n        useForm({ defaultValues: defaultValues, mode: \"all\" })\r\n\r\n\r\n    const resetAndClose = () => {\r\n        reset()\r\n        handleClose()\r\n    }\r\n\r\n    // TODO Call through DB\r\n    // Minimum time needed to perform a task *in minutes*\r\n    const minDuration = 30\r\n\r\n    const createItem = (data, start, end) => {\r\n        let item = {}\r\n        item[\"task_type\"] = taskType\r\n        item[\"description\"] = data.taskDetails || \"\"\r\n        item[\"dbs_required\"] = data.dbsReq\r\n        item[\"start_time\"] = start\r\n        item[\"end_time\"] = end\r\n        // TODO correct!!!! Requestee ID hardcoded!!!!!\r\n        console.log(\"Requestee ID: \", reqId)\r\n        item[\"requestee\"] = reqId > 0 ? reqId : 100\r\n        item[\"volunteer\"] = null\r\n        console.log(\"item created: \", item)\r\n        return item\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        const start = new Date(data.startDate + \"T\" + data.startTime)\r\n        const end = new Date(data.endDate + \"T\" + data.endTime)\r\n        const item = createItem(data, start, end)\r\n        console.log(\"Submitting item: \", item)\r\n        if (updTaskId < 0)\r\n            axios.post(\"/api/tasks/\", item)\r\n                .then(function (response) {\r\n                    console.log(\"POST RESPONSE: \", response)\r\n                    console.log(\"POST RESPONSE DATA: \", response.data)\r\n                    const newTaskId = (response.status === 201) ? response.data.id : -1\r\n                    if (newTaskId > 0) {\r\n                        console.log(\"Adding new item to the list of tasks... New Task id=\", newTaskId)\r\n                        const newTask = response.data\r\n                        updateTaskList(newTask, -1)\r\n                        console.log(\"onSubmit: newTaskId: \", newTaskId)\r\n                    }\r\n                    else\r\n                        console.log(\"Something was unsuccessful. Request status: \", response.status)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error.request)\r\n                    console.log(error.config)\r\n                })\r\n        else\r\n            axios.put(\"/api/tasks/\" + updTaskId + '/', item)\r\n                .then(function (response) {\r\n                    console.log(\"PUT RESPONSE: \", response)\r\n                    console.log(\"PUT RESPONSE DATA: \", response.data.id)\r\n                    if (response.status === 200) {\r\n                        const updatedTask = response.data\r\n                        updateTaskList(updatedTask, response.data.id)\r\n                        console.log(\"onSubmit: updated task with id: \", updTaskId)\r\n                    }\r\n                    else console.log(\"Something went wrong on task update.. Response status: \", response.status)\r\n                }\r\n                )\r\n                .catch(function (error) {\r\n                    console.log(error.request)\r\n                    console.log(error.config)\r\n                })\r\n\r\n        console.log(\"onSubmit: updTaskId: \", updTaskId)\r\n        resetAndClose()\r\n    };\r\n\r\n    const watchAll = watch()\r\n\r\n    const validateTimes = () => {\r\n        const start = new Date(watchAll.startDate + \"T\" + watchAll.startTime)\r\n        const end = new Date(watchAll.endDate + \"T\" + watchAll.endTime)\r\n\r\n        if (!watchAll.startDate || !watchAll.startTime ||\r\n            !watchAll.endDate || !watchAll.endTime) {\r\n            clearErrors(\"endTime\")\r\n            return\r\n        }\r\n\r\n        const minEnd = start.setMinutes(start.getMinutes() + minDuration)\r\n        if (minEnd > end)\r\n            return \"Not enough time to complete your task. \" +\r\n                \"Consider at least \" + minDuration + \" minutes.\"\r\n    }\r\n\r\n    const handleStartDate = e => {\r\n        if (!e.target.value) return\r\n        if ((!watchAll.endDate) ||\r\n            (watchAll.endDate && (watchAll.endDate < e.target.value))) {\r\n            setValue(\"endDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleEndDate = e => {\r\n        if (!e.target.value) return\r\n        if (watchAll.startDate && (watchAll.startDate > e.target.value)) {\r\n            setValue(\"startDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const reqFieldMsg = \"Required field\"\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={resetAndClose} fullWidth maxWidth=\"sm\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"dialog-add-task\">\r\n                        {dialogHeader[taskType]}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        < TextField\r\n                            id=\"taskDetails\"\r\n                            name=\"taskDetails\"\r\n                            inputRef={register({ required: [\"Shopping\", \"Other\"].includes(taskType) })}\r\n                            // autoFocus\r\n                            label=\"Details\"\r\n                            multiline\r\n                            rows={5}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            error={errors.taskDetails}\r\n                            helperText={errors.taskDetails && \"Details are required for this task type\"}\r\n                        />\r\n\r\n                        <p className={classes.p}>\r\n                            <br />\r\n                            Set dates when you need it: < br />\r\n                            <Typography variant=\"caption\">\r\n                                Providing wider time window will increase your chances to find a volunteer.\r\n                            </ Typography >\r\n                        </p>\r\n\r\n                        <Grid id=\"start-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    label=\"Starting from\"\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    onChange={handleStartDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startDate\")}\r\n                                    helperText={errors.startDate && errors.startDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"time\"\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startTime\")}\r\n                                    helperText={errors.startTime && errors.startTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid id=\"finish-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    id=\"endDate\"\r\n                                    name=\"endDate\"\r\n                                    label=\"Ending at\"\r\n                                    fullWidth\r\n                                    onChange={handleEndDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endDate\")}\r\n                                    helperText={errors.endDate && errors.endDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({\r\n                                        required: reqFieldMsg,\r\n                                        validate: validateTimes\r\n                                    })}\r\n                                    type=\"time\"\r\n                                    id=\"endTime\"\r\n                                    name=\"endTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endTime\")}\r\n                                    helperText={errors.endTime && errors.endTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* TODO */}\r\n                        {/* <FormControlLabel disabled\r\n                            control={\r\n                                <Checkbox\r\n                                    name=\"dbsRequired\"\r\n                                    checked={false}\r\n                                />}\r\n                            label=\"Only volunteers with DBS certificate\"\r\n                        /> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={resetAndClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"Submit\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormDialog","import React from \"react\"\r\nimport moment from \"moment\";\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default function TaskTable({ taskList, handleCopy, handleEdit, handleRemove }) {\r\n\r\n\r\n    const theme = () => createMuiTheme({\r\n        overrides: {\r\n            // MUIDataTableToolbar: {\r\n            //     root: {\r\n            //         // width: \"min-content\",\r\n            //         // margin: \"20px 0px 0px 0px\",\r\n            //         backgroundColor: '#AAF',\r\n            //     },\r\n            // },\r\n            MuiPaper: {\r\n                root: {\r\n                    // width: \"min-content\",\r\n                    margin: \"20px 0px 0px 0px\",\r\n                    // backgroundColor: '#AAF',\r\n                },\r\n            },\r\n            MuiTableCell: {\r\n                root: {\r\n                    //  maxWidth: \"120px\",\r\n                    padding: \"5px 5px 5px 15px\"\r\n                },\r\n            },\r\n            MUIDataTableToolbar: {\r\n                root: {\r\n                    background: '#AAF',\r\n                }\r\n            },\r\n            MUIDataTableHeadCell: {\r\n                root: {\r\n                    //   height: 56,\r\n                    //   fontSize: 12,\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                    position: \"relative\"\r\n                }\r\n            },\r\n            MUIDataTableBodyCell: {\r\n                root: {\r\n                    //   height: 20,\r\n                    //   fontFamily: \"Oxygen\",\r\n                    //   fontSize: 13,\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                    position: \"relative\",\r\n                    //   maxWidth: 0\r\n                }\r\n            },\r\n            // MUIDataTablePagination: {\r\n            //     root: {\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"center\",\r\n            //         alignItems: \"center\",\r\n            //         textAlign: \"center\"\r\n            //     },\r\n            //     caption: {\r\n            //         fontSize: 16\r\n            //     }\r\n            // }\r\n        },\r\n    });\r\n\r\n    const options = {\r\n        selectableRows: \"none\",\r\n        print: false,\r\n        download: false,\r\n        rowsPerPage: 20,\r\n        rowsPerPageOptions: [5, 10, 20],\r\n        setRowProps: row => {\r\n            if (row[5] === \"Assigned\") {\r\n                return {\r\n                    style: { background: \"palegreen\" }\r\n                }\r\n            }\r\n            if (row[5] === \"Open\") {\r\n                return {\r\n                    style: { background: \"peachpuff\" }\r\n                }\r\n            }\r\n        },\r\n    // resizableColumns: true,\r\n    sortOrder: {\r\n            name: \"start\",\r\n            direction: \"desc\",\r\n        },\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            width: \"5%\",\r\n            options: { display: true, sort: true, filter: false },\r\n        },\r\n        {\r\n            name: \"taskTypeName\",\r\n            label: \"Task Type\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"taskDetails\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                display: true,\r\n                filter: false,\r\n                sort: false,\r\n                width: \"15%\",\r\n\r\n                customBodyRender: (value) => {\r\n                    const maxSymb = 30\r\n                    return value.slice(0, maxSymb) + (value.length > maxSymb ? \"...\" : \"\")\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"start\",\r\n            label: \"Start Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n\r\n                customBodyRender: (value) =>\r\n                    moment(value).format('lll'),\r\n            },\r\n        },\r\n        {\r\n            name: \"end\",\r\n            label: \"End Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n\r\n                customBodyRender: (value) =>\r\n                    moment(value).format('lll'),\r\n            },\r\n        },\r\n        {\r\n            name: \"statusName\",\r\n            label: \"State\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Actions\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                width: \"40%\",\r\n                // customBodyRender: (value, tableMeta, updateValue) => {\r\n                //     return (\r\n                //         <Button\r\n                //             variant=\"contained\"\r\n                //             color=\"primary\"\r\n                //             size=\"small\"\r\n                //             style={{ marginLeft: 16 }}\r\n                //             value={value}\r\n                //             onClick={(e) => handleClickOpen(e, value)}\r\n                //         >\r\n                //             View\r\n                //         </Button>\r\n                //     );\r\n                // },\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                // disabled={tableMeta.rowData[1] === null ? false : true}\r\n                                // style={{\r\n                                //     marginLeft: 16,\r\n                                //     backgroundColor:\r\n                                //         tableMeta.rowData[1] === null ? \"green\" : \"lightgrey\",\r\n                                // }}\r\n                                className=\"button\"\r\n                                // value={value}\r\n                                onClick={() => {\r\n                                    console.log(tableMeta.rowData[0])\r\n                                    handleCopy(tableMeta.rowData[0])\r\n                                }}\r\n                            >\r\n                                Copy\r\n                        </Button>\r\n                            {[\"Open\", \"Expired\"].includes(tableMeta.rowData[5]) ?\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    className=\"button\"\r\n                                    style={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        console.log(tableMeta.rowData[0])\r\n                                        handleEdit(tableMeta.rowData[0])\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                    </Button>\r\n                                : null}\r\n                            {[\"Open\"].includes(tableMeta.rowData[5]) ?\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    size=\"small\"\r\n                                    className=\"button\"\r\n                                    style={{\r\n                                        marginLeft: 10\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        console.log(tableMeta.rowData[0])\r\n                                        handleRemove(tableMeta.rowData[0])\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                    </Button>\r\n                                : null}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MuiThemeProvider theme={theme()}>\r\n                <MUIDataTable\r\n                    title=\"All Tasks\"\r\n                    data={taskList}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </MuiThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport NewTaskButtons from './NewTaskButtons'\r\nimport NewTaskForm from './NewTaskForm'\r\nimport TasksTable from './TaskTable'\r\nimport axios from \"axios\"\r\nimport moment from \"moment\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\n\r\nfunction AddTask() {\r\n\r\n    // const { currentUser } = useAuth()\r\n    // const userUID = \"WKERfsSJNM\"  // user with no tasks\r\n    const userUID = \"WNVuNlpmfs\" // currentUser.uid\r\n    const [reqId, setReqId] = useState(-1)\r\n    const [taskList, setTaskList] = useState([])\r\n\r\n    const parseDbTask = (dbTask) => {\r\n        let task = {}\r\n        task.id = dbTask.id\r\n        task.taskType = dbTask.task_type\r\n        task.taskTypeName = dbTask.task_type_name\r\n        task.taskDetails = dbTask.description\r\n        task.start = dbTask.start_time\r\n        task.end = dbTask.end_time\r\n        task.dbsReq = dbTask.dbs_required\r\n        task.status = dbTask.status\r\n        task.statusName = dbTask.status_name\r\n        return task\r\n    }\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: \"/api/requestee/tasks/\",\r\n            timeout: 8000,\r\n            params: {\r\n                requid: userUID,\r\n            },\r\n        }\r\n        axios(options)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                const taskData = response.data.map(task => parseDbTask(task))\r\n                setTaskList(taskData)\r\n\r\n                if (response.data.length > 0) {\r\n                    setReqId(response.data[0].requestee)\r\n                    console.log(\"Requestee ID: \", reqId, typeof reqId)\r\n                }\r\n                else {\r\n                    console.log(\"Asking user id..\")\r\n                    axios.get(\"/api/accounts/get_user_by_id/\", {\r\n                        params: { uId: userUID, },\r\n                    })\r\n                        .then((response) => {\r\n                            console.log(response)\r\n                            console.log(\"Requestee id: \", response.data[0]);\r\n                            setReqId(response.data[0])\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(\"error\");\r\n                            console.log(error.message, error.request);\r\n                        })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n                console.log(error.message);\r\n                console.log(error.request);\r\n                console.log(error.config);\r\n            })\r\n    }, [])\r\n\r\n    const addTask = newTask => {\r\n        const updatedTaskList = [...taskList, newTask]\r\n        setTaskList(updatedTaskList)\r\n    }\r\n\r\n    const updateTask = (updTask, id) => {\r\n        let updatedTaskList = taskList.filter(task => task.id !== id)\r\n        updatedTaskList = [...updatedTaskList, updTask]\r\n        setTaskList(updatedTaskList)\r\n    }\r\n\r\n    const updateTaskList = (dbTask, id) => {\r\n        if (id < 0)\r\n            addTask(parseDbTask(dbTask))\r\n        else\r\n            updateTask(parseDbTask(dbTask), id)\r\n    }\r\n\r\n    const taskDefaults = {\r\n        taskDetails: \"\",\r\n        startDate: null,\r\n        startTime: \"08:00\",\r\n        endDate: null,\r\n        endTime: \"20:00\"\r\n    }\r\n\r\n    const [showAddDialog, setShowAddDialog] = React.useState(false);\r\n    const [taskType, setTaskType] = React.useState(null);\r\n    const [newTaskDefaults, setNewTaskDefaults] = React.useState(taskDefaults)\r\n    const [updTaskId, setUpdTaskId] = React.useState(-1)\r\n\r\n    const handleClickOpen = (e, taskType) => {\r\n        setTaskType(taskType)\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setTaskType(null)\r\n        setShowAddDialog(false)\r\n        setNewTaskDefaults(taskDefaults)\r\n        setUpdTaskId(-1)\r\n    }\r\n\r\n    const handleCopy = id => {\r\n        const taskToCopy = taskList.find(task => task.id === id)\r\n        setTaskType(taskToCopy.taskType)\r\n        setNewTaskDefaults({\r\n            ...newTaskDefaults,\r\n            taskDetails: taskToCopy.taskDetails,\r\n        })\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleEdit = id => {\r\n        const taskToEdit = taskList.find(task => task.id === id)\r\n        setTaskType(taskToEdit.taskType)\r\n        setNewTaskDefaults({\r\n            taskDetails: taskToEdit.taskDetails,\r\n            startDate: moment(taskToEdit.start).format('YYYY-MM-DD'),\r\n            startTime: moment(taskToEdit.start).format('HH:mm'),\r\n            endDate: moment(taskToEdit.end).format('YYYY-MM-DD'),\r\n            endTime: moment(taskToEdit.end).format('HH:mm'),\r\n        })\r\n        setUpdTaskId(id)\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleRemove = id => {\r\n        const copyTaskList = [...taskList]\r\n        let taskToCancel = copyTaskList.find(task => task.id === id)\r\n        taskToCancel.status = \"Cancelled\"\r\n        setTaskList(copyTaskList)\r\n    }\r\n\r\n\r\n    return <div className=\"centered\">\r\n\r\n        <NewTaskButtons handleClickOpen={handleClickOpen} />\r\n\r\n        <NewTaskForm open={showAddDialog} handleClose={handleClose} taskType={taskType}\r\n            defaultValues={newTaskDefaults} updTaskId={updTaskId}\r\n            updateTaskList={updateTaskList} reqId={reqId} />\r\n\r\n        <TasksTable taskList={taskList} handleCopy={handleCopy}\r\n            handleEdit={handleEdit} handleRemove={handleRemove} />\r\n    </div>\r\n}\r\n\r\nexport default AddTask","import VolunteerSearchTask from \"./VolunteerSearchTask\";\r\n\r\nconst VolunteerWelcome = () => {\r\n  return (\r\n    <div>\r\n      <VolunteerSearchTask />        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolunteerWelcome;\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n          console.log(currentUser)\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/\" />\r\n        \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AppNavBar from \"./components/structure/AppNavBar\"\r\nimport Landing from \"./components/landing/Landing\"\r\nimport Legal from \"./components/landing/Legal\"\r\nimport Cookie from \"./components/landing/Cookie\"\r\nimport Support from \"./components/landing/Support\"\r\nimport Privacy from \"./components/landing/Privacy\"\r\nimport TermConditions from \"./components/landing/TermConditions\"\r\nimport About from \"./components/landing/About\"\r\nimport Contact from \"./components/landing/Contact\"\r\nimport Footer from \"./components/structure/Footer\"\r\nimport SignIn from \"./components/login/SignIn\"\r\nimport SignUp from \"./components/login/SignUp\"\r\nimport Profile from \"./components/login/Profile\"\r\nimport ForgotPassword from \"./components/login/ForgotPassword\"\r\nimport RegistrationPage  from \"./components/registrationPage/RegistrationPage\"\r\nimport VolunteerSearchTask from \"./components/volunteerTask/VolunteerSearchTask\"\r\nimport AddTask from \"./components/task/AddTask\"\r\nimport VolunteerWelcome from \"./components/volunteerTask/VolunteerWelcomePage\"\r\nimport { BrowserRouter as Router,  Route, Switch } from \"react-router-dom\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport PrivateRoute from \"./components/PrivateRoute\"\r\n    \r\nfunction App() {\r\n    \r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n            <div className=\"App\">\r\n                <AppNavBar />\r\n                <div className=\"AppContent\">\r\n                <Switch>\r\n                <Route exact path=\"/helpwhoneeds\">\r\n                    <Landing />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>\r\n                <Route path=\"/login/:userType\">\r\n                    <SignIn />\r\n                </Route>  \r\n                <Route path=\"/signup/:user\">\r\n                    <SignUp />\r\n                </Route>  \r\n                <Route path=\"/forgotpassword/:user\">\r\n                    <ForgotPassword />\r\n                </Route>    \r\n                <Route path=\"/legal\">\r\n                    <Legal />\r\n                </Route>    \r\n                <Route path=\"/support\">\r\n                    <Support />\r\n                </Route>    \r\n                <Route path=\"/privacy\">\r\n                    <Privacy />\r\n                </Route>    \r\n                <Route path=\"/cookie\">\r\n                    <Cookie />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>    \r\n                <Route path=\"/termconditions\">\r\n                    <TermConditions />\r\n                </Route>\r\n                <PrivateRoute path=\"/profile\" component= {Profile} /> \r\n                <PrivateRoute path=\"/registrationpage/:user\" component= {RegistrationPage} />\r\n                <PrivateRoute path=\"/searchtask\" component= {VolunteerSearchTask} />\r\n                <PrivateRoute path=\"/mytask\" component= {VolunteerWelcome} />\r\n                <PrivateRoute path=\"/addtask\" component= {AddTask} />\r\n                </Switch>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n            </AuthProvider>\r\n        </Router>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}