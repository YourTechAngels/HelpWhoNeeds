{"version":3,"sources":["fireBase.js","contexts/AuthContext.js","components/structure/AppNavBar.js","components/landing/Landing.js","components/landing/Legal.js","components/landing/Cookie.js","components/landing/Support.js","components/landing/TermConditions.js","components/landing/About.js","components/landing/Contact.js","components/structure/Footer.js","components/login/SignIn.js","components/login/SignUp.js","components/login/Profile.js","components/login/ForgotPassword.js","components/registrationPage/AddressForm.js","components/registrationPage/RegistrationPage.js","components/volunteerTask/TaskDetail.js","components/volunteerTask/Notification.js","components/volunteerTask/CofirmDialog.js","components/volunteerTask/TaskListTable.js","components/volunteerTask/VolunteerSearchTask.js","components/volunteerTask/TaskListData.js","components/task/NewTaskForm.js","components/task/TaskTable.js","components/task/AddTask.js","components/task/tasksDataOnly.js","components/volunteerTask/VolunteerWelcomePage.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","signout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","useStyles","makeStyles","theme","root","flexGrow","margin","spacing","title","appBar","backgroundColor","HomeIcon","props","SvgIcon","d","AppNavBar","classes","setAuth","anchorEl","setAnchorEl","console","log","uid","open","Boolean","history","useHistory","handleClose","a","push","alert","className","FormGroup","FormControlLabel","control","Switch","checked","onChange","event","target","aria-label","label","AppBar","position","Toolbar","color","fontSize","onClick","window","location","href","Typography","variant","Button","component","Link","to","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","button","pInfo","textAlign","divContentWrapper","minHeight","paddingLeft","Landing","Legal","Cookie","Support","TermConditions","About","Grid","container","direction","alignItems","item","xs","Contact","footer","boxSizing","height","padding","borderTop","width","Footer","Copyright","align","Date","getFullYear","paper","marginTop","display","flexDirection","avatar","palette","secondary","main","form","submit","SignIn","useParams","userType","emailRef","useRef","passwordRef","error","setError","setEmail","uID","setUID","nameLabel","e","preventDefault","current","ui","Container","maxWidth","CssBaseline","Avatar","Alert","severity","AlertTitle","onSubmit","TextField","required","fullWidth","type","inputRef","autoFocus","Checkbox","disabled","Box","mt","Signup","passwordConfirmRef","textFld","border","fontWeight","marginRight","Profile","initialInputState","firstName","lastName","DateOfBirth","postcode","address1","address2","city","county","formData","setFormData","message","setMessage","handleChange","name","promises","Promise","all","then","catch","finally","Fragment","flex-start","style","sm","autoComplete","InputLabelProps","shrink","ButtonGroup","marginLeft","justify","ForgotPassword","AddressForm","postcodeRef","address1Ref","address2Ref","cityRef","countyRef","setCounty","setCity","Postcodes","require","Callbacks","lookup","result","admin_county","parliamentary_constituency","RegistrationPage","evt","TaskDialog","data","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","aria-labelledby","DialogTitle","DialogContent","noValidate","taskType","taskSummary","multiline","rows","DialogActions","top","Notification","notify","setNotify","reason","isOpen","Snackbar","autoHideDuration","dailog","dailogContent","dailogAction","justifyContent","ConfirmDialog","confirmDialog","setConfirmDialog","subTitle","size","minWidth","onConfirm","options","filterType","selectableRows","selectableRowsOnClick","rowsPerPage","rowsPerPageOptions","print","download","createMuiTheme","overrides","MuiDataTable","responsiveScroll","maxHeight","MUIDataTableBodyCell","TaskListTable","taskListData","isMyTask","handleAccept","handleView","handleReject","handleComplete","taskCols","sort","filter","viewColumns","customBodyRender","tableMeta","updateValue","rowData","moment","format","volId","status","columns","h5","intialTasks","date","distance","VolunteerSearchTask","pendingTasks","setPendingTasks","myTasks","task","unassignedTasks","hideMyTask","setHideMyTask","hideNewTask","setHideNewTask","showDialog","setShowDialog","dialogData","setDialogData","notifyMsg","setNotifyMsg","taskId","selectedTask","find","handleClickOpen","returnTask","map","assignTask","Hidden","smUp","p","FormDialog","addTask","defaultValues","updateTask","updTaskId","reset","getFormDate","getMonth","toString","padStart","getDate","useForm","mode","register","handleSubmit","errors","watch","setValue","clearErrors","resetAndClose","watchAll","createItem","start","end","taskDetails","dbsReq","reqFieldMsg","startDate","startTime","endDate","endTime","axios","post","request","config","includes","helperText","inputProps","min","hasOwnProperty","validate","setMinutes","getMinutes","TaskTable","taskList","handleCopy","handleEdit","handleRemove","slice","length","MuiPaper","MuiTableCell","MUIDataTableToolbar","background","MUIDataTableHeadCell","overflow","whiteSpace","textOverflow","sortOrder","h1","largeButton","largeIcon","icon","marginBottom","AddTask","prototype","addHours","h","this","setHours","getHours","setTaskList","nextId","setNextId","taskDefaults","showAddDialog","setShowAddDialog","setTaskType","newTaskDefaults","setNewTaskDefaults","setUpdTaskId","NewTaskForm","newTask","updatedTaskList","updTask","taskToCopy","taskToEdit","copyTaskList","VolunteerWelcome","PrivateRoute","Component","rest","render","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5971d7b.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    \r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY ,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN ,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID ,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport default app","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../fireBase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  function signout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    signout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    IconButton,\r\n    Switch,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    MenuItem,\r\n    Menu,\r\n    SvgIcon,\r\n} from \"@material-ui/core\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& > svg\": {\r\n            margin: theme.spacing(2),\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        backgroundColor: \"#9370db\",\r\n    },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n        </SvgIcon>\r\n    );\r\n} /*For HomeIcons */\r\n\r\nconst AppNavBar = () => {\r\n    const classes = useStyles();\r\n    const { currentUser, signout } = useAuth();\r\n    const [auth, setAuth] = React.useState(false); \r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        setAuth(currentUser === null ? false : true);\r\n    }, [currentUser]);\r\n\r\n    if(currentUser) {\r\n     console.log(currentUser.email);\r\n     console.log(currentUser.uid); }\r\n     console.log(\"auth\" + auth);\r\n    const open = Boolean(anchorEl);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (event) => {\r\n        setAuth(event.target.checked);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    async function handleSignOut() {\r\n        try {\r\n            await signout();\r\n            setAuth(false);\r\n            history.push(\"/HelpWhoNeeds\");\r\n        } catch (error) {\r\n            setAuth(currentUser === null ? false : true);\r\n            console.log(error);\r\n            alert(\"failed to log out\");\r\n        }\r\n\r\n        console.log(\"auth\" + auth);\r\n        handleClose();\r\n    }\r\n     \r\n    const handleClick=() => {\r\n        history.push(\"/profile\")\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormGroup>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={auth}\r\n                            onChange={handleChange}\r\n                            aria-label=\"login switch\"\r\n                        />\r\n                    }\r\n                    label={auth ? \"Logout\" : \"Login\"}\r\n                />\r\n            </FormGroup>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                   <HomeIcon\r\n                        color=\"action\"\r\n                        fontSize=\"large\"\r\n                        onClick={(event) => (window.location.href = \"/HelpWhoNeeds/\")}\r\n                    />\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Help Who Needs\r\n          </Typography>\r\n\r\n                    <Button color=\"inherit\" component={Link} to={\"/about\"}>\r\n                        About\r\n          </Button>\r\n                    <Button color=\"inherit\" component={Link} to={\"/contact\"}>\r\n                        Contact\r\n          </Button>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\",\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem onClick={handleClick}>Profile</MenuItem>\r\n                                <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppNavBar;\r\n","import { Link, useHistory } from \"react-router-dom\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\nconst Landing = () => {\r\n    \r\n    const classes = useStyles();\r\n    const { currentUser } = useAuth();\r\n    const history = useHistory();\r\n    const handleClick =() => { \r\n        (currentUser ? history.push(\"/myTask\") : history.push(\"/login/Volunteer\") )           \r\n    } \r\n    const handleUserClick =() => {\r\n         (currentUser ? history.push(\"/addTask\") : history.push(\"/login/AssistanceRequester\") )\r\n    }     \r\n      \r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n                <h1>Help Who Needs</h1>\r\n                <p>\r\n                    Our TechForGood project aims to match a volunteer with a vulnerable\r\n                    person who is shielding in these unprecedented times. Hence our\r\n                    application is called HelpWhoNeeds. The app will aim to match a\r\n                    volunteer with a vulnerable person in their immediate local area\r\n                    helping with chores such as shopping, GP visits, prescriptions, dog\r\n                    walking or just some social contact with the appropriate measures in\r\n                    place. We hope this app brings some comfort and relief to the users\r\n                    with a sense of moral and social obligation. \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> If you would like help or need any assistance using our system, please call <strong>0800 123 4567</strong>.</p>\r\n                <Button\r\n                    className= {classes.button}\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleUserClick}             \r\n                >\r\n                    I need Help\r\n                </Button>\r\n                \r\n                <Button\r\n                    className= {classes.button} \r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    onClick = {handleClick} \r\n                >\r\n                    I can Help\r\n        </Button>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Landing;\r\n","\r\nconst Legal = () => (\r\n    <div>\r\n        <h1>This is the Legal Page</h1>\r\n        <p>\r\n        End-user privacy.\r\n        Intellectual property (IP) rights.\r\n        Advertising and promotions.\r\n        Users of this app must be 18 or over.\r\n\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Legal;\r\n","\r\nconst Cookie = () => (\r\n    <div>\r\n        <h1>This is the Cookie Page</h1>\r\n        <p>\r\n           Cookie Policy\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Cookie;","\r\nconst Support = () => (\r\n    <div>\r\n        <h1>This is the Support Page</h1>\r\n        <p>\r\n            Add the Support form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Support;","\r\nconst TermConditions = () => (\r\n    <div>\r\n        <h1>This is the Terms Page</h1>\r\n        <p>\r\n            Add the form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default TermConditions;\r\n","import { Link } from \"react-router-dom\"\r\nimport { makeStyles, Button } from \"@material-ui/core\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button:{\r\n        margin:\"10px\",\r\n    },\r\n    pInfo:{\r\n        textAlign: \"center\",\r\n    },\r\n    divContentWrapper:{\r\n        textAlign: \"center\",\r\n        minHeight: \"100%\",\r\n        paddingLeft: \"50px\",\r\n    }\r\n\r\n});\r\n\r\n\r\nconst About = () =>  {\r\n\r\n\r\n    const classes = useStyles();\r\n   \r\n    return (\r\n            <div className={classes.divContentWrapper} >\r\n               <h1>YourTechAngels - Project HelpWhoNeeds</h1>\r\n        \r\n        <p>\r\n            Established in 2020, Your Tech Angels is a collaborative team of 4 engineers who are involved \r\n            and interested in technology.  Our aim is to use technology to help others especially during \r\n            the Covid 19 pandemic.\r\n            This is the motivation behind our HelpWhoNeeds project that assists the shielding population in \r\n            the UK with everyday assistance such as delivering groceries or prescriptions, dog walking or \r\n            even just a chat. The app we are building will help those who need to find a volunteer match in \r\n            their local areas - near their vicinity based on their post code during lockdown and other \r\n            times too.  \r\n        </p>\r\n\r\n        <p className={classes.pInfo}> You can request Volunteer help 24x7 - <strong>0800 123 4567</strong></p>\r\n        \r\n   \r\n\r\n        <Grid container \r\n        \r\n              direction=\"row\"\r\n              alignItems=\"center\" spacing={3} >\r\n\r\n                  <Grid container item xs={2} spacing={3}>\r\n               <Link to={'/legal'} variant=\"body2\">\r\n                  Legal\r\n               </Link> </Grid>\r\n               \r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/cookie`} variant=\"body2\">\r\n                  Cookie\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/support`} variant=\"body2\">\r\n                  Support\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/termCondition`} variant=\"body2\">\r\n                  Terms Conditions\r\n               </Link> </Grid>\r\n\r\n               <Grid container item xs={2} spacing={3}>\r\n               <Link to={`/contact`} variant=\"body2\">\r\n                  Contact\r\n               </Link> </Grid>\r\n\r\n               </Grid>\r\n       \r\n                            \r\n                \r\n\r\n    </div>\r\n\r\n    )};\r\n\r\n\r\nexport default About;\r\n","\r\nconst Contact = () => (\r\n    <div>\r\n        <h1>This is the Contact Page</h1>\r\n        <p>\r\n            Add the Contact form\r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default Contact;\r\n","import { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    footer:{\r\n        boxSizing: \"border-box\",\r\n        height: \"50px\",\r\n        padding: \"15px\",\r\n        backgroundColor: \"#eee\",\r\n        borderTop: \"1px solid #e0e0e0\",       \r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n    },\r\n\r\n});\r\n\r\nfunction Footer(){\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <footer className= {classes.footer}>\r\n        <div>\r\n            Made by <a href=\"https://github.com/YourTechAngels\">YourTechAngels</a>\r\n        </div>\r\n        </footer>\r\n    )  \r\n}\r\n\r\n\r\nexport default Footer;","import React, { useState, useRef } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    const param = useParams();\r\n    const user = param.userType;\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login, currentUser } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [uID, setUID] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const nameLabel = (`${user}`==='AssistanceRequester'? 'Requestee': `${user}`)\r\n    \r\n  \r\n    async function handleSubmit(e) {\r\n      e.preventDefault()\r\n  \r\n      try {\r\n        setError(\"\")\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n\r\n        if (`${user}` === 'Volunteer')\r\n        { history.push(\"/myTask\");\r\n          console.log(process.env.PUBLIC_URL) }\r\n        else {\r\n            history.push(\"/addTask\") }\r\n        }\r\n     catch {\r\n        setError(\"Failed to log in\")\r\n      }\r\n  \r\n      setLoading(false)\r\n      if(currentUser) {\r\n        setEmail(currentUser.email);\r\n        setUID(currentUser.ui)\r\n        console.log(email);\r\n        console.log(uID); }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                   {nameLabel} Sign in\r\n                </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"email\" \r\n                        inputRef={emailRef} \r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        type=\"password\" \r\n                        inputRef={passwordRef}\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled = {loading}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link to={`/forgotPassword/${user}`} variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            New User ?<Link to={`/signUp/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                     </Grid></Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React, {useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const param = useParams();\r\n  const user = param.user;\r\n  \r\n\r\n    async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    console.log(emailRef.current.value,passwordRef.current.value, passwordConfirmRef.current.value)\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords does not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(`/registrationPage/${user}`)\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)  \r\n   \r\n}\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign Up\r\n           </Typography>\r\n           { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n           <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordRef}\r\n                    label=\"Password\"\r\n                    id=\"password\"\r\n                />\r\n                 <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"password\" \r\n                    inputRef={passwordConfirmRef}\r\n                    label=\"Confirm Password\"\r\n                    id=\"passwordConfirm\"\r\n                />\r\n                        <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Sign Up\r\n                    </Button>\r\n              </form>\r\n              </div>  <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n  )\r\n}","import React, { useState, useRef } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from \"@material-ui/core/Button\";\r\n// import AddressForm from './AddressForm';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\n\r\n\r\nconst useStyles = {\r\n    textFld: { width: '85%', height: 40, paddingLeft: 8 },\r\n    button: {\r\n        border: '4px',\r\n        fontWeight: 'bold',\r\n        alignItems: 'center',\r\n        marginRight: '20px',\r\n        // marginLeft: '10px'    \r\n    },\r\n\r\n};\r\n\r\nexport default function Profile(props) {\r\n\r\n    const initialInputState = {\r\n        firstName: \"\", lastName: \"\", DateOfBirth: \"\",\r\n        postcode: \"\", address1: \"\", address2: \"\", city: \"\", county: \"\", email:\"\"\r\n    }\r\n    const [formData, setFormData] = useState({ initialInputState })\r\n    const { firstName, lastName, DateOfBirth, postcode, address1, address2, city, county, email } = formData\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const param = useParams();\r\n    const user = param.user;\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        console.log(emailRef.current.value)\r\n        if(emailRef.current.value === \"\" || emailRef.current.value === null) {\r\n            setMessage(\"Data has been saved successfully\")\r\n                console.log(formData)\r\n        }\r\n        else {\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords does not match\")\r\n        }\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n          if  (emailRef.current.value !== currentUser.email) { \r\n            promises.push(updateEmail(emailRef.current.value))\r\n          }\r\n          if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n          }\r\n      \r\n          Promise.all(promises)\r\n            .then(() => {\r\n               history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n              setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n              setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n            <h2 align=\"center\"> My Profile</h2>\r\n            { !error && message && <Alert severity=\"success\">\r\n                <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n            { error && <Alert severity=\"error\">\r\n                <AlertTitle>{error}</AlertTitle>\r\n            </Alert>}\r\n            <Grid container flex-start=\"left\" >\r\n                <p style={{ paddingLeft: 8 }}>Please enter your details here</p> </Grid>\r\n\r\n            <form onSubmit={handleSubmit} >\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField                        \r\n                            id=\"firstName\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            label=\"First name\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            value={firstName || ''}\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} >\r\n                        <TextField                            \r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            label=\"Last name\"\r\n                            onChange={handleChange}\r\n                            value={lastName || ''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"family-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"DateOfBirth\"\r\n                            name=\"DateOfBirth\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            label=\"Date Of Birth\"\r\n                            onChange={handleChange}\r\n                            value={DateOfBirth || ''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n                        <ButtonGroup>\r\n                            <TextField\r\n                                id=\"postcode\"\r\n                                name=\"postcode\"\r\n                                label=\"Post code\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange}\r\n                                value={postcode || ''}\r\n                                style={useStyles.textFld}\r\n                                autoComplete=\" postal-code\" />\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <Button variant=\"outlined\" className=\"btn btn-secondary w-100\" onClick={() => { console.log('Find Address button clicked') }}>Find Address</Button>\r\n                            </Grid></ButtonGroup>  </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"address1\"\r\n                            name=\"address1\"\r\n                            onChange={handleChange}\r\n                            value={address1 || ''}\r\n                            label=\"Address line 1\"\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"address-line1\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"address2\"\r\n                            name=\"address2\"\r\n                            label=\"Address line 2\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            value={address2 || ''}\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"address-line2\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"city\"\r\n                            name=\"city\"\r\n                            label=\"City\"\r\n                            onChange={handleChange}\r\n                            value={city || ''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                            autoComplete=\"address-level2\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"county\"\r\n                            name=\"county\"\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            value={county || ''}\r\n                            style={useStyles.textFld}\r\n                            label=\"County\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type = \"email\"\r\n                            label=\"Email Address\"\r\n                            inputRef={emailRef || ''}\r\n                            onChange={handleChange}\r\n                            value={email || ''}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type = \"password\"\r\n                            label=\"Password\"\r\n                            inputRef={passwordRef}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                            id=\"passwordConfirm\"\r\n                            name=\"city\"\r\n                            type = \"password\"\r\n                            label=\"Confirm Password\"\r\n                            inputRef={passwordConfirmRef}\r\n                            variant=\"outlined\"\r\n                            style={useStyles.textFld}\r\n                     />\r\n                    </Grid>\r\n                  \r\n                    <Grid item xs={12}>\r\n\r\n                        {(`${user}` === 'Volunteer') &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"secondary\" style={{ marginLeft: '5px' }} name=\"dbsCheck\" value=\"yes\" />}\r\n                                label=\"I have a valid DBS certificate\"\r\n                            />}\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={3} direction=\"row\">\r\n                    <ButtonGroup className=\"w-100 text-center mt-2\">\r\n                        <Grid item xs={12} >\r\n                            <Button disabled = {loading} variant=\"contained\" style={useStyles.button} className=\"btn btn-primary w-100\" type=\"submit\">Update</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Button variant=\"contained\" style={useStyles.button} className=\"btn btn-primary w-100\" component={Link} to=\"/HelpWhoNeeds/\" >Cancel</Button>\r\n                        </Grid>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n    </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const classes = useStyles();  \r\n  const emailRef = useRef()\r\n  const { resetPassword } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [message, setMessage] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const param = useParams();\r\n  const user = param.user;\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      setMessage(\"\")\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await resetPassword(emailRef.current.value)\r\n      setMessage(\"Check your inbox for password reset instructions\")\r\n    } catch {\r\n      setError(\"Failed to reset password\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\"> Forgot Password </Typography>\r\n            { error && <Alert severity=\"error\">\r\n            <AlertTitle>Error: {error}</AlertTitle>\r\n            </Alert>}\r\n            { message && <Alert severity=\"success\">\r\n            <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n            <form onSubmit={handleSubmit} > \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"email\" \r\n                    inputRef={emailRef} \r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    // autoFocus\r\n                />\r\n                <Button            \r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                disabled = {loading}\r\n                                color=\"primary\"\r\n                            >Reset Password\r\n                </Button>\r\n              </form>\r\n             <Grid container>\r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-2\">\r\n                            Go to <Link to={`/login/${user}`} variant=\"body2\">\r\n                                Sign In</Link> \r\n                            </div>\r\n                        </Grid>\r\n              </Grid>\r\n              <Grid container>          \r\n                        <Grid item xs>\r\n                            <div  className=\"w-100 text-center mt-3\">\r\n                            New User ?<Link to={`/signUp/${user}`} variant=\"body2\">\r\n                                Sign Up </Link> \r\n                            </div>\r\n                        </Grid>\r\n                       \r\n        </Grid>\r\n\r\n    </div>  <Box mt={8}>\r\n    <Copyright />\r\n</Box>\r\n</Container>\r\n)\r\n}","import React,{useState, useRef} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst useStyles = {\r\n  textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n  button: {\r\n    border: '4px',\r\n    color: \"default\",\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nexport default function AddressForm(props) {\r\n\r\n    const postcodeRef = useRef()\r\n    const address1Ref = useRef()\r\n    const address2Ref = useRef()\r\n    const cityRef = useRef()\r\n    const countyRef = useRef()\r\n    const [county, setCounty] = useState(\"\");\r\n    const [city, setCity] = useState(\"\"); \r\n\r\n    const handleClick= (e) => {\r\n      e.preventDefault();\r\n      const PostcodesJS = require(\"postcodes.js\");\r\n      const Postcodes = new PostcodesJS.Callbacks();\r\n      console.log(postcodeRef.current.value)   \r\n      Postcodes.lookup(postcodeRef.current.value, function(error, result) {\r\n      console.log(result);\r\n      setCounty(result.admin_county)\r\n      setCity(result.parliamentary_constituency)\r\n      console.log(county)\r\n    });}\r\n\r\n    return (\r\n     \r\n   <React.Fragment>     \r\n           \r\n      <Grid container spacing={3} >\r\n        <Grid item xs={12} sm={6}> \r\n        {/* <Grid container  spacing={0} direction='row'>          */}\r\n        <ButtonGroup>     \r\n         <TextField\r\n            required\r\n            id=\"postcode\"\r\n            name=\"postcode\"\r\n            label=\"Post code\"\r\n            variant=\"outlined\"\r\n            inputRef = {postcodeRef}\r\n            style = {useStyles.textFld}\r\n            autoComplete=\" postal-code\"/>       \r\n          <Grid item xs={12} sm={6}>            \r\n            <Button variant=\"outlined\" type='submit' onClick={handleClick}>Find Address</Button>\r\n        </Grid></ButtonGroup>  </Grid> \r\n   \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            inputRef = {address1Ref}\r\n            label=\"Address line 1\"\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            inputRef = {address2Ref}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            inputRef = {cityRef}\r\n            value= {city || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n           id=\"county\" \r\n           name=\"county\"  \r\n           inputRef = {countyRef}\r\n           variant=\"outlined\" \r\n           value= {county || ''}\r\n           style = {useStyles.textFld}\r\n           label=\"County\" />\r\n        </Grid>\r\n        </Grid>\r\n       \r\n    </React.Fragment>   \r\n  \r\n)}","import React,{useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddressForm from './AddressForm';\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = {\r\n  textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n  button: {\r\n    border: '4px',\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n    marginTop: '10px',\r\n  },\r\n  \r\n  };\r\n\r\n  export default function RegistrationPage(props) {\r\n\r\n    const initialInputState = { firstName : \"\" , lastName:\"\" , DateOfBirth:\"\", \r\n                                postcode:\"\", address1:\"\", address2:\"\", city:\"\" , county:\"\" }     \r\n    const [formData, setFormData] = useState({initialInputState})\r\n    const { firstName , lastName, DateOfBirth, postcode, address1, address2, city, county } = formData\r\n    const [message, setMessage] = useState(\"\")\r\n    \r\n\r\n    const handleChange= (e) => {\r\n      setFormData({...formData,[e.target.name]: e.target.value});\r\n    }\r\n\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        setMessage(\"Data has been saved successfully\")\r\n         \r\n      console.log(formData)\r\n      }\r\n\r\n      const param = useParams();\r\n      const user  = param.user;\r\n      \r\n                \r\n   return (\r\n     \r\n   <React.Fragment>\r\n     \r\n      <h2 align=\"center\"> Registration form</h2>\r\n      { message && <Alert severity=\"success\">\r\n            <AlertTitle>{message}</AlertTitle>\r\n            </Alert>}\r\n      <Grid container flex-start=\"left\" >\r\n      <p style={{paddingLeft:8}}>Please enter your details here</p> </Grid>\r\n     \r\n      <form onSubmit={handleSubmit} >      \r\n      <Grid container spacing={3} >\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            type =\"text\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            variant=\"outlined\"\r\n            onChange = { handleChange }\r\n            value= {firstName || ''}\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"given-name\"\r\n          />\r\n        </Grid>\r\n         <Grid item xs={12} sm={6} >\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            type =\"text\"\r\n            label=\"Last name\"\r\n            onChange = { handleChange }\r\n            value= {lastName || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n            autoComplete=\"family-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"DateOfBirth\"\r\n            name=\"DateOfBirth\"\r\n            type= \"date\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            label=\"Date Of Birth\"\r\n            onChange = { handleChange }\r\n            value= {DateOfBirth || ''}\r\n            variant=\"outlined\"\r\n            style = {useStyles.textFld}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={12}> \r\n          <AddressForm />\r\n        </Grid> \r\n               \r\n        <Grid item xs={12}>\r\n         \r\n         { (`${user}` === 'Volunteer') && \r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" style = {{ marginLeft: '5px' }} name=\"dbsCheck\" value=\"yes\" />}\r\n            label=\"I have a valid DBS certificate\"\r\n          /> }  \r\n\r\n        </Grid>\r\n        </Grid>\r\n        <Grid container justify=\"center\" spacing={3} direction=\"row\">\r\n        <Grid item xs={12} align=\"center\">\r\n        <Button variant = \"contained\" className = \"btn btn-primary w-100\" type=\"submit\">Submit</Button>\r\n        </Grid>\r\n        </Grid>\r\n        </form>\r\n    </React.Fragment>   \r\n  \r\n)}","import Button from \"@material-ui/core/Button\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = theme => ({\r\n    textFld: { width: '85%', height: 40, paddingLeft: 8 } , \r\n    button: {\r\n      border: '4px',\r\n      color: \"default\",\r\n      fontWeight: 'bold',\r\n      marginLeft: 10,\r\n      marginTop: '10px',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: 'fit-content',\r\n      },\r\n    \r\n    });\r\n\r\nconst TaskDialog = ({ open, handleClose, title, data }) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    console.log(data);\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                fullScreen={fullScreen}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                <form className={useStyles.form} noValidate>\r\n                        {data && (\r\n                            <Grid container spacing={3}>\r\n                                 {data.firstName} {data.lastName}\r\n                                <Grid item xs={12} sm={12} >\r\n                                <TextField id=\"taskType\" type=\"string\" label=\"Task\" value={data.taskType}  variant=\"outlined\"\r\n                                style = {useStyles.textFld}\r\n                                autoComplete=\"family-name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} >\r\n                                <TextField id=\"taskSummary\" type=\"string\" label=\"Task Summary\" value={data.taskSummary}  variant=\"outlined\"\r\n                                multiline\r\n                                rows={6}\r\n                                style = {useStyles.textFld}\r\n                                autoComplete=\"family-name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    \r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6} >\r\n                                    \r\n                                </Grid>\r\n                            </Grid>\r\n                        )}\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                        Close\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskDialog;\r\n","import { Snackbar, makeStyles } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        top: theme.spacing(15),\r\n    },\r\n}));\r\n\r\nfunction Notification(props) {\r\n    const classes = useStyles();\r\n    const { notify, setNotify } = props;\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setNotify({\r\n            ...notify,\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            className={classes.root}\r\n            open={notify.isOpen}\r\n            autoHideDuration={2000}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n            onClose={handleClose}\r\n        >\r\n            <Alert severity={notify.type} onClose={handleClose}>\r\n                {notify.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    dailog: {\r\n        padding: theme.spacing(2),\r\n        position: \"absolute\",\r\n        top: theme.spacing(15),\r\n    },\r\n    dailogContent: {\r\n        textAlign: \"center\",\r\n    },\r\n    dailogAction: {\r\n        justifyContent: \"center\",\r\n    }\r\n\r\n}));\r\n\r\nconst ConfirmDialog = (props) => {\r\n    const classes = useStyles();\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen}\r\n            className={classes.dailog}>\r\n            <DialogTitle>\r\n                <Typography variant=\"h6\">{confirmDialog.title}</Typography>\r\n            </DialogTitle>\r\n            <DialogContent className={classes.dailogContent}>\r\n                <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dailogAction}>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={confirmDialog.onConfirm}\r\n                >\r\n                    OK\r\n        </Button>\r\n                <Button variant=\"contained\"\r\n                    size=\"small\"\r\n                    style={{ minWidth: '90px' }}\r\n                    onClick={() => setConfirmDialog({ ...ConfirmDialog, isOpen: false })}\r\n                >\r\n                    Cancel\r\n        </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n\r\nexport default ConfirmDialog;","import MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport moment from \"moment\";\r\n\r\nconst SPACED_DATE_FORMAT = \"DD MMM YYYY\";\r\n\r\nconst options = {\r\n    filterType: \"multiselect\",\r\n    selectableRows: \"none\", //can also be single/mulitple\r\n    selectableRowsOnClick: true,\r\n    rowsPerPage: \"5\",\r\n    rowsPerPageOptions: [5,10, 15, 20],\r\n    print: false,\r\n    download: false,\r\n};\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiDataTable: {\r\n            root: {\r\n                width: \"min-content\",\r\n            },\r\n            responsiveScroll: {\r\n                maxHeight: \"none\", //not working\r\n            },\r\n        },\r\n        MUIDataTableBodyCell: {\r\n            root: {\r\n                backgroundColor: \"#FFF\",\r\n                width: \"90px\",\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport default function TaskListTable({ taskListData, isMyTask, handleAccept, handleView,handleReject,handleComplete }) {\r\n\r\n    const taskCols = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            options: {\r\n                display: false,\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n            },\r\n        },\r\n        {\r\n            name: \"volId\",\r\n            label: \"volunteer ID\",\r\n            viewColumns: false,\r\n            options: { display: false, sort: false, filter: false },\r\n        },\r\n        {\r\n            name: \"status\",\r\n            label: \"State\",\r\n            viewColumns: false,\r\n            options: {\r\n                display: false,\r\n                filter: false,\r\n                sort: false,\r\n                width: \"10%\",\r\n        },   \r\n        },   \r\n        {\r\n            name: \"firstName\",\r\n            label: \"First name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"lastName\",\r\n            label: \"Last name\",\r\n\r\n            options: {\r\n                display: false,\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"firstName\",\r\n            label: \"Full Name\",\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    //console.log(tableMeta.rowData, '......');\r\n                    return (\r\n                        <div>\r\n                            {tableMeta.rowData[3]} {tableMeta.rowData[4]}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"date\",\r\n            label: \"Start Date\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                customBodyRender: (value) =>\r\n                    moment(new Date(value)).format(SPACED_DATE_FORMAT),\r\n            },\r\n        },\r\n        {\r\n            name: \"distance\",\r\n            label: \"Distance\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask === true ? true : false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    const volId =tableMeta.rowData[1];\r\n                    const status =tableMeta.rowData[2];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            disabled={(volId === null ||status === \"Completed\") ? true : false}                                 \r\n                            style={{ marginLeft: 2 ,minWidth: \"70px\",}}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                handleReject(value);\r\n                        }}\r\n                        >\r\n                            Reject\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Confirm\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask === true ? true : false,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    const status = tableMeta.rowData[2];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            size=\"small\"                           \r\n                            disabled={ status !== \"Completed\" ? false : true}                            \r\n                            style={{ marginLeft: 2 ,  minWidth: \"90px\",}}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                            handleComplete(value);\r\n                        }}\r\n                        >\r\n                        { status !== \"Completed\" ? \"COMPLETE\":\"DONE\"}\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Action\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                viewColumns: false,\r\n                display: isMyTask ? false : true,\r\n                customBodyRender: (value, tableMeta) => {\r\n                    const volId = tableMeta.rowData[1];\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={volId === null ? false : true}\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                backgroundColor:\r\n                                volId === null ? \"green\" : \"lightgrey\",\r\n                            }}\r\n                            className=\"button\"\r\n                            value={value}\r\n                            onClick={() => {\r\n                                //console.log(tableMeta.rowData[1]);\r\n                                handleAccept(value);                             \r\n                            }}\r\n                        >\r\n                            Accept\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                viewColumns: false,\r\n                customBodyRender: (value, tableMeta, updateValue) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            style={{\r\n                                marginLeft: 2,\r\n                                minWidth: \"70px\",\r\n                            }}\r\n                            value={value}\r\n                            onClick={(e) => {\r\n                            handleView(e, value);\r\n                            }}\r\n                        >\r\n                            View\r\n                        </Button>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <MUIDataTable\r\n                title=  {isMyTask === false ? \"Search New Tasks\" : \"My Pending Tasks\"}\r\n                data={taskListData}\r\n                columns={taskCols}\r\n                options={options}\r\n            />\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TaskDialog from \"./TaskDetail\";\r\nimport Notification from \"./Notification\";\r\nimport ConfirmDialog from \"./CofirmDialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport initialTasks from \"./TaskListData\";\r\nimport TaskListTable from \"./TaskListTable\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    h5: {\r\n        color: \"#4C4B51\",\r\n        textAlign: \"center\",\r\n    },\r\n}));\r\n\r\nconst intialTasks = initialTasks();\r\nexport default function VolunteerSearchTask() {\r\n    const classes = useStyles();\r\n    const [pendingTasks, setPendingTasks] = useState(intialTasks);\r\n    const myTasks = pendingTasks.filter(\r\n        (task) =>\r\n            task.volId !== null && task.status !== \"Completed\" && task.volId === 1\r\n    );\r\n    const unassignedTasks = pendingTasks.filter((task) => task.volId === null);\r\n\r\n    const [hideMyTask, setHideMyTask] = useState(false);\r\n    const [hideNewTask, setHideNewTask] = useState(false);\r\n    const [showDialog, setShowDialog] = React.useState(false);\r\n    const [dialogData, setDialogData] = React.useState(null);\r\n    const [notifyMsg, setNotifyMsg] = useState({\r\n        isOpen: false,\r\n        message: \" \",\r\n        type: \" \",\r\n    });\r\n    const [confirmDialog, setConfirmDialog] = useState({\r\n        isOpen: false,\r\n        title: \"\",\r\n        subTitle: \"\",\r\n    });\r\n\r\n    const handleClickOpen = (e, dialogData) => {\r\n        setShowDialog(true);\r\n        setDialogData(dialogData);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShowDialog(false);\r\n        setDialogData(null);\r\n    };\r\n\r\n    const handleView = (e, taskId) => {\r\n        const selectedTask = pendingTasks.find((task) => task.id === taskId);\r\n        console.log(selectedTask);\r\n        if (selectedTask != null) {\r\n            handleClickOpen(e, selectedTask);\r\n        }\r\n    };\r\n\r\n    const handleReject = (taskId) => {\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Are you sure to return your assigned Task?\",\r\n            subTitle:\r\n                \"Once rejected it will be unassigned from you.To reassign the task you need to go to search task and accept it again.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n                const returnTask = pendingTasks.map((task) =>\r\n                    task.id === taskId ? { ...task, volId: null, status: \"Open\" } : task\r\n                );\r\n                setPendingTasks(returnTask);\r\n                console.log(\"myTask\");\r\n                console.log(myTasks);\r\n                console.log(\"assignTasks\");\r\n                console.log(unassignedTasks);\r\n                console.log(pendingTasks);\r\n\r\n                setNotifyMsg({\r\n                    isOpen: true,\r\n                    message: \"Task is unssigned from you\",\r\n                    type: \"warning\",\r\n                });\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleAccept = (taskId) => {\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Do you agree to accept this task?\",\r\n            subTitle:\r\n                \"Once accepted it will be assigned to you.To return the task you need to go to your task list and reject it.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n\r\n                const assignTask = pendingTasks.map((task) =>\r\n                    task.id === taskId ? { ...task, volId: 1, status: \"Assigned\" } : task\r\n                );\r\n                setPendingTasks(assignTask);\r\n                console.log(\"assignTasks\");\r\n                console.log(unassignedTasks);\r\n                console.log(\"myTask\");\r\n                console.log(myTasks);\r\n                console.log(pendingTasks);\r\n                setNotifyMsg({\r\n                    isOpen: true,\r\n                    message: \"Task is successfully assigned to you.\",\r\n                    type: \"success\",\r\n                });\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleComplete = (taskId) => {\r\n        setConfirmDialog({\r\n            isOpen: true,\r\n            title: \"Have you completed this task?\",\r\n            subTitle:\r\n                \"Once completed it will be marked as done will be removed from your list.\",\r\n            onConfirm: () => {\r\n                setConfirmDialog({\r\n                    ...confirmDialog,\r\n                    isOpen: false,\r\n                });\r\n\r\n                const assignTask = pendingTasks.map((task) =>\r\n                    task.id === taskId ? { ...task, status: \"Completed\" } : task\r\n                );\r\n                setPendingTasks(assignTask);\r\n                console.log(\"assignTasks\");\r\n                console.log(unassignedTasks);\r\n                console.log(\"myTask\");\r\n                console.log(myTasks);\r\n                console.log(pendingTasks);\r\n                setNotifyMsg({\r\n                    isOpen: true,\r\n                    message: \"Task is successfully marked as completed\",\r\n                    type: \"success\",\r\n                });\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ height: \"100%\" }}>\r\n                <Grid id=\"tasks\" container spacing={2} direction=\"row\" justify=\"center\">\r\n                    {!hideMyTask && (\r\n                        <Grid className=\"my-tasks\" item xs={12} sm={6} align=\"right\">\r\n                            <Hidden smUp>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        setHideMyTask(true);\r\n                                        setHideNewTask(false);\r\n                                    }}\r\n                                >\r\n                                    Search New Tasks\r\n                </Button>{\" \"}\r\n                            </Hidden>\r\n\r\n                            <h4 className={classes.h5}>{\"My Assigned Tasks\"}</h4>\r\n                            <TaskListTable\r\n                                taskListData={myTasks}\r\n                                isMyTask={true}\r\n                                handleAccept={handleAccept}\r\n                                handleReject={handleReject}\r\n                                handleView={handleView}\r\n                                handleComplete={handleComplete}\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {!hideNewTask && (\r\n                        <Grid className=\"new-tasks\" item xs={12} sm={6} align=\"right\">\r\n                            <Hidden smUp>\r\n                                {\" \"}\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        setHideNewTask(true);\r\n                                        setHideMyTask(false);\r\n                                    }}\r\n                                >\r\n                                    View My Tasks\r\n                </Button>\r\n                            </Hidden>\r\n                            <h4 className={classes.h5}>{\"Search New Tasks\"}</h4>\r\n                            <TaskListTable\r\n                                taskListData={unassignedTasks}\r\n                                isMyTask={false}\r\n                                handleAccept={handleAccept}\r\n                                handleReject={handleReject}\r\n                                handleView={handleView}\r\n                                handleComplete={handleComplete}\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n\r\n                <TaskDialog\r\n                    open={showDialog}\r\n                    handleClose={handleClose}\r\n                    title=\"Task Summary\"\r\n                    data={dialogData}\r\n                />\r\n                <Notification notify={notifyMsg} setNotify={setNotifyMsg} />\r\n                <ConfirmDialog\r\n                    confirmDialog={confirmDialog}\r\n                    setConfirmDialog={setConfirmDialog}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","export default function initialTasks() {\r\n    const initialTasks = [\r\n        {\r\n            id: 1,\r\n            lastName: \"Snow\",\r\n            firstName: \"Jon\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2020-12-28\",\r\n            distance: 1,\r\n            volId: 1,\r\n            status: \"Assigned\",\r\n        },\r\n        {\r\n            id: 2,\r\n            lastName: \"Lannister\",\r\n            firstName: \"Cersei\",\r\n            taskType: \"Dog Walking\",\r\n            taskSummary: \"I need help with dog walkingevery morning and afternoon\",\r\n            date: \"2021-01-20\",\r\n            distance: 1,\r\n            volId: 1,\r\n            status: \"Assigned\",\r\n        },\r\n        {\r\n            id: 3,\r\n            lastName: \"Lannister\",\r\n            firstName: \"Jaime\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Asda\",\r\n            date: \"2021-01-28\",\r\n            distance: 2.3,\r\n            volId: 1,\r\n            status: \"Completed\",\r\n        },\r\n        {\r\n            id: 4,\r\n            lastName: \"Stark\",\r\n            firstName: \"Arya\",\r\n            taskType: \"Pharmacy\",\r\n            taskSummary: \"I need help with picking up my prescription from local gp\",\r\n            date: \"2021-03-20\",\r\n            distance: 0.8,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 5,\r\n            lastName: \"Targaryen\",\r\n            firstName: \"Daenerys\",\r\n            taskType: \"Hospital\",\r\n            taskSummary: \"I need help to drop off and pick up from my hospital\",\r\n            date: \"2021-01-10\",\r\n            distance: 2,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 6,\r\n            lastName: \"Melisandre\",\r\n            firstName: null,\r\n            taskType: \"Phone Call\",\r\n            taskSummary: \"I need someone to give me a call to have a chat\",\r\n            date: \"2021-01-20\",\r\n            distance: 5,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 7,\r\n            lastName: \"Clifford\",\r\n            firstName: \"Ferrara\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2021-01-20\",\r\n            distance: 4,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 8,\r\n            lastName: \"Frances\",\r\n            firstName: \"Rossini\",\r\n            taskType: \"Other\",\r\n            taskSummary: \"I need help with mowing my garden\",\r\n            date: \"2021-01-20\",\r\n            distance: 2,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 9,\r\n            lastName: \"Roxie\",\r\n            firstName: \"Harvey\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Sainsbuyrys\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 10,\r\n            lastName: \"Indra\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 11,\r\n            lastName: \"Paanas\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 12,\r\n            lastName: \"Paanas\",\r\n            firstName: \"Thapa\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 13,\r\n            lastName: \"Kate\",\r\n            firstName: \"Middleton\",\r\n            taskType: \"Medical\",\r\n            taskSummary: \"I need help with picking up my prescription\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 14,\r\n            lastName: \"Joe\",\r\n            firstName: \"Kelly\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Tesco\",\r\n            date: \"2021-01-20\",\r\n            distance: 4,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 15,\r\n            lastName: \"Frances\",\r\n            firstName: \"Rai\",\r\n            taskType: \"Other\",\r\n            taskSummary: \"I need help with mowing my garden\",\r\n            date: \"2021-01-20\",\r\n            distance: 2,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n        {\r\n            id: 16,\r\n            lastName: \"Roxie\",\r\n            firstName: \"Raymond\",\r\n            taskType: \"Shopping\",\r\n            taskSummary: \"I need help with Shopping from Sainsbuyrys\",\r\n            date: \"2021-01-20\",\r\n            distance: 3,\r\n            volId: null,\r\n            status: \"Open\",\r\n        },\r\n    ];\r\n    return initialTasks;\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n// import Checkbox from '@material-ui/core/Checkbox'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport axios from \"axios\"\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    p: { margin: \"10px 2px 10px 2px\" },\r\n    root: {\r\n        padding: \"8px 0px 8px 0px\"\r\n    }\r\n})\r\n\r\nfunction FormDialog({ open, handleClose, taskType, addTask, defaultValues, updateTask, updTaskId }) {\r\n\r\n    console.log(\"Task update dialog with id: \", updTaskId)\r\n\r\n    useEffect(() => {\r\n        reset(defaultValues);\r\n    }, [defaultValues])\r\n\r\n\r\n    const dialogHeader = {\r\n        \"Shopping\": \"Shopping\",\r\n        \"Pharmacy\": \"Collect medicine\",\r\n        \"Dog Walking\": \"Dog Walking\",\r\n        \"Hospital\": \"Visit Hospital Appointment\",\r\n        \"Chat\": \"Friendly Chat\",\r\n        \"Other\": \"I need help with ...\",\r\n    }\r\n\r\n    const getFormDate = date => {\r\n        let year = date.getFullYear();\r\n        let month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n        let day = date.getDate().toString().padStart(2, '0');\r\n        return year + '-' + month + '-' + day\r\n    }\r\n\r\n    const { register, handleSubmit, reset, errors, watch, setValue, clearErrors } =\r\n        useForm({ defaultValues: defaultValues, mode: \"all\" })\r\n\r\n\r\n    const resetAndClose = () => {\r\n        reset()\r\n        handleClose()\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        const start = new Date(data.startDate + \"T\" + data.startTime)\r\n        const end = new Date(data.endDate + \"T\" + data.endTime)\r\n        const item = createItem(data, start, end)\r\n        axios.post(\"http://localhost:8000/api/tasks/\", item).catch(function (error) {\r\n            console.log(error.request); console.log(error.config)})\r\n\r\n        addTask({\r\n            taskType: taskType, taskDetails: data.taskDetails,\r\n            start: start, end: end\r\n        })\r\n        console.log(\"onSubmit: updTaskId: \", updTaskId)\r\n        if (updTaskId < 0) \r\n            addTask({\r\n                taskType: taskType, taskDetails: data.taskDetails,\r\n                start: start, end: end\r\n            })\r\n        else\r\n            updateTask({\r\n                taskType: taskType, taskDetails: data.taskDetails,\r\n                start: start, end: end\r\n            }, updTaskId)\r\n        resetAndClose()\r\n    };\r\n\r\n    const watchAll = watch()\r\n\r\n    // TODO Call through DB\r\n    // Minimum time needed to perform a task *in minutes*\r\n    const minDuration = 30\r\n\r\n    const createItem = (data, start, end) => {\r\n        const backendTaskTypes = {\r\n            \"Shopping\": \"GRO\",\r\n            \"Pharmacy\": \"PHA\",\r\n            \"Dog Walking\": \"DOG\",\r\n            \"Hospital\": \"HOS\",\r\n            \"Chat\": \"CHAT\",\r\n            \"Other\": \"ANY\", }\r\n        let item = {}\r\n        item[\"task_type\"] = backendTaskTypes[taskType]\r\n        item[\"description\"] = data.taskDetails || null\r\n        item[\"dbs_needed\"] = data.dbsReq\r\n        item[\"start_time\"] = start\r\n        item[\"end_time\"] = end\r\n        console.log(\"item created: \", item)\r\n        return item\r\n    }\r\n\r\n    // const onSubmit = (data) => {\r\n    //     console.log(\"SUBMITTED: \", data)\r\n    //     // setSubmittedData(data)\r\n    //     const startHours = getHours(data.startTime)\r\n    //     const startMins = getMinutes(data.startTime)\r\n    //     const endHours = getHours(data.endTime)\r\n    //     const endMins = getMinutes(data.endTime)\r\n    //     data.startDate = setMinutes(setHours(data.startDate, startHours), startMins)\r\n    //     data.endDate = setMinutes(setHours(data.endDate, endHours), endMins)\r\n\r\n    //     const item = createItem(data)\r\n    //     axios.post(\"http://localhost:8000/api/tasks/\", item).catch(function (error) {\r\n    //         console.log(error.request); console.log(error.config)})\r\n    //     addTask({tasType: taskType, taskDetails: data.taskDetails,\r\n    //             startTime: data.startDate, endTime: data.endTime, dbsReq: false})\r\n    //     handleClose()\r\n    // };\r\n\r\n    const validateTimes = () => {\r\n        const start = new Date(watchAll.startDate + \"T\" + watchAll.startTime)\r\n        const end = new Date(watchAll.endDate + \"T\" + watchAll.endTime)\r\n\r\n        if (!watchAll.startDate || !watchAll.startTime ||\r\n            !watchAll.endDate || !watchAll.endTime) {\r\n            clearErrors(\"endTime\")\r\n            return\r\n        }\r\n\r\n        const minEnd = start.setMinutes(start.getMinutes() + minDuration)\r\n        if (minEnd > end)\r\n            return \"Not enough time to complete your task. \" +\r\n                \"Consider at least \" + minDuration + \" minutes.\"\r\n    }\r\n\r\n    const handleStartDate = e => {\r\n        if (!e.target.value) return\r\n        if ((!watchAll.endDate) ||\r\n            (watchAll.endDate && (watchAll.endDate < e.target.value))) {\r\n            setValue(\"endDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleEndDate = e => {\r\n        if (!e.target.value) return\r\n        if (watchAll.startDate && (watchAll.startDate > e.target.value)) {\r\n            setValue(\"startDate\", e.target.value)\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const reqFieldMsg = \"Required field\"\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={resetAndClose} fullWidth maxWidth=\"sm\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <DialogTitle id=\"dialog-add-task\">\r\n                        {dialogHeader[taskType]}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        < TextField\r\n                            id=\"taskDetails\"\r\n                            name=\"taskDetails\"\r\n                            inputRef={register({ required: [\"Shopping\", \"Other\"].includes(taskType) })}\r\n                            // autoFocus\r\n                            label=\"Details\"\r\n                            multiline\r\n                            rows={5}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            error={errors.taskDetails}\r\n                            helperText={errors.taskDetails && \"Details are required for this task type\"}\r\n                        />\r\n\r\n                        <p className={classes.p}>\r\n                            <br />\r\n                            Set dates when you need it: < br />\r\n                            <Typography variant=\"caption\">\r\n                                Providing wider time window will increase your chances to find a volunteer.\r\n                            </ Typography >\r\n                        </p>\r\n\r\n                        <Grid id=\"start-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    label=\"Starting from\"\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    onChange={handleStartDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startDate\")}\r\n                                    helperText={errors.startDate && errors.startDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"time\"\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"startTime\")}\r\n                                    helperText={errors.startTime && errors.startTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid id=\"finish-time\" container spacing={3}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({ required: reqFieldMsg })}\r\n                                    type=\"date\"\r\n                                    margin=\"dense\"\r\n                                    inputProps={{ min: getFormDate(new Date()) }}\r\n                                    id=\"endDate\"\r\n                                    name=\"endDate\"\r\n                                    label=\"Ending at\"\r\n                                    fullWidth\r\n                                    onChange={handleEndDate}\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endDate\")}\r\n                                    helperText={errors.endDate && errors.endDate.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={register({\r\n                                        required: reqFieldMsg,\r\n                                        validate: validateTimes\r\n                                    })}\r\n                                    type=\"time\"\r\n                                    id=\"endTime\"\r\n                                    name=\"endTime\"\r\n                                    label=\"Time\"\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    error={errors.hasOwnProperty(\"endTime\")}\r\n                                    helperText={errors.endTime && errors.endTime.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {/* TODO */}\r\n                        {/* <FormControlLabel disabled\r\n                            control={\r\n                                <Checkbox\r\n                                    name=\"dbsRequired\"\r\n                                    checked={false}\r\n                                />}\r\n                            label=\"Only volunteers with DBS certificate\"\r\n                        /> */}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={resetAndClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"Submit\" color=\"primary\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormDialog","import React from \"react\"\r\nimport moment from \"moment\";\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default function TaskTable({ taskList, handleCopy, handleEdit, handleRemove }) {\r\n\r\n    const theme = () => createMuiTheme({\r\n        overrides: {\r\n            // MUIDataTableToolbar: {\r\n            //     root: {\r\n            //         // width: \"min-content\",\r\n            //         // margin: \"20px 0px 0px 0px\",\r\n            //         backgroundColor: '#AAF',\r\n            //     },\r\n            // },\r\n            MuiPaper: {\r\n                root: {\r\n                    // width: \"min-content\",\r\n                    margin: \"20px 0px 0px 0px\",\r\n                    // backgroundColor: '#AAF',\r\n                },\r\n            },\r\n            MuiTableCell: {\r\n                root: {\r\n                    //  maxWidth: \"120px\",\r\n                    padding: \"5px 5px 5px 15px\"\r\n                },\r\n            },\r\n            MUIDataTableToolbar: {\r\n                root: {\r\n                    background: '#AAF',\r\n                }\r\n            },\r\n            MUIDataTableHeadCell: {\r\n                root: {\r\n                    //   height: 56,\r\n                    //   fontSize: 12,\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                    position: \"relative\"\r\n                }\r\n            },\r\n            MUIDataTableBodyCell: {\r\n                root: {\r\n                    //   height: 20,\r\n                    //   fontFamily: \"Oxygen\",\r\n                    //   fontSize: 13,\r\n                    overflow: \"hidden\",\r\n                    whiteSpace: \"nowrap\",\r\n                    textOverflow: \"ellipsis\",\r\n                    position: \"relative\",\r\n                    //   maxWidth: 0\r\n                }\r\n            },\r\n            // MUIDataTablePagination: {\r\n            //     root: {\r\n            //         display: \"flex\",\r\n            //         justifyContent: \"center\",\r\n            //         alignItems: \"center\",\r\n            //         textAlign: \"center\"\r\n            //     },\r\n            //     caption: {\r\n            //         fontSize: 16\r\n            //     }\r\n            // }\r\n        },\r\n    });\r\n\r\n    const options = {\r\n        selectableRows: \"none\",\r\n        print: false,\r\n        download: false,\r\n        rowsPerPage: 20,\r\n        rowsPerPageOptions: [5, 10, 20],\r\n        // resizableColumns: true,\r\n        sortOrder: {\r\n            name: \"start\",\r\n            direction: \"desc\",\r\n        },\r\n        // TODO customize when backend connected\r\n        // serverSide: true,\r\n        // onTableChange: (action, tableState) => {\r\n        //     this.xhrRequest('my.api.com/tableData', result => {\r\n        //       this.setState({ data: result });\r\n        //     });\r\n        //   }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            label: \"ID\",\r\n            width: \"5%\",\r\n            options: { display: false, sort: true, filter: false },\r\n        },\r\n        {\r\n            name: \"taskType\",\r\n            label: \"Task Type\",\r\n\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"taskDetails\",    \r\n            label: \" Task Detail\",\r\n\r\n            options: {\r\n                display: true,\r\n                filter: false,\r\n                sort: false,\r\n                width: \"15%\",\r\n\r\n                customBodyRender: (value) => {\r\n                    const maxSymb = 30\r\n                    return value.slice(0, maxSymb) + (value.length > maxSymb ? \"...\" : \"\")\r\n                },\r\n            },\r\n        },\r\n        {\r\n            name: \"start\",\r\n            label: \"Start Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n\r\n                customBodyRender: (value) =>\r\n                    moment(value).format('lll'),\r\n            },\r\n        },\r\n        {\r\n            name: \"end\",\r\n            label: \"End Time\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n\r\n                customBodyRender: (value) =>\r\n                    moment(value).format('lll'),\r\n            },\r\n        },\r\n        {\r\n            name: \"status\",\r\n            label: \"State\",\r\n            options: {\r\n                filter: true,\r\n                sort: true,\r\n                width: \"10%\",\r\n            },\r\n        },\r\n        {\r\n            name: \"id\",\r\n            label: \"Actions\",\r\n\r\n            options: {\r\n                sort: false,\r\n                filter: false,\r\n                width: \"40%\",\r\n                // customBodyRender: (value, tableMeta, updateValue) => {\r\n                //     return (\r\n                //         <Button\r\n                //             variant=\"contained\"\r\n                //             color=\"primary\"\r\n                //             size=\"small\"\r\n                //             style={{ marginLeft: 16 }}\r\n                //             value={value}\r\n                //             onClick={(e) => handleClickOpen(e, value)}\r\n                //         >\r\n                //             View\r\n                //         </Button>\r\n                //     );\r\n                // },\r\n                customBodyRender: (value, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                // disabled={tableMeta.rowData[1] === null ? false : true}\r\n                                // style={{\r\n                                //     marginLeft: 16,\r\n                                //     backgroundColor:\r\n                                //         tableMeta.rowData[1] === null ? \"green\" : \"lightgrey\",\r\n                                // }}\r\n                                className=\"button\"\r\n                                // value={value}\r\n                                onClick={() => {\r\n                                    console.log(tableMeta.rowData[0])\r\n                                    handleCopy(tableMeta.rowData[0])\r\n                                }}\r\n                            >\r\n                                Copy\r\n                        </Button>\r\n                            {[\"Open\", \"Expired\"].includes(tableMeta.rowData[5]) ?\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    className=\"button\"\r\n                                    style={{\r\n                                        marginLeft: 10 }}\r\n                                    onClick={() => {\r\n                                        console.log(tableMeta.rowData[0])\r\n                                        handleEdit(tableMeta.rowData[0])\r\n                                    }}\r\n                                >\r\n                                    Edit\r\n                    </Button>\r\n                                : null}\r\n                                {[\"Open\"].includes(tableMeta.rowData[5]) ?\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    size=\"small\"\r\n                                    className=\"button\"\r\n                                    style={{\r\n                                        marginLeft: 10 }}\r\n                                    onClick={() => {\r\n                                        console.log(tableMeta.rowData[0])\r\n                                        handleRemove(tableMeta.rowData[0])\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                    </Button>\r\n                                : null}\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MuiThemeProvider theme={theme()}>\r\n                <MUIDataTable\r\n                    title=\"All Tasks\"\r\n                    data={taskList}\r\n                    columns={columns}\r\n                    options={options}\r\n                />\r\n            </MuiThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useState } from \"react\"\r\nimport Button from '@material-ui/core/Button'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport PetsIcon from '@material-ui/icons/Pets'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy'\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital'\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp'\r\nimport NewTaskForm from './NewTaskForm'\r\nimport TasksTable from './TaskTable'\r\nimport initialTasks from \"./tasksDataOnly\"\r\n\r\nconst useStyles =\r\n    makeStyles(\r\n        {\r\n            h1: {\r\n                color: \"#4C4B51\"\r\n            },\r\n            largeButton: {\r\n                border: 5,\r\n                color: \"#FF8E53\",\r\n                padding: \"15px\",\r\n                margin: \"15px\",\r\n                height: 100,\r\n                width: 110,\r\n            },\r\n            largeIcon:\r\n                { fontSize: 60 },\r\n\r\n            label: {\r\n                flexDirection: 'column',\r\n                // color: '#4C4B51'\r\n            },\r\n            icon: {\r\n                fontSize: '32px !important',\r\n                marginBottom: 5\r\n            }\r\n        })\r\n\r\n\r\nfunction AddTask() {\r\n\r\n    const [taskList, setTaskList] = useState(initialTasks())\r\n    const [nextId, setNextId] = useState(11)\r\n\r\n    const addTask = newTask => {\r\n        newTask.id = nextId\r\n        setNextId(nextId + 1)\r\n        newTask.status = \"Open\"\r\n        const updatedTaskList = [...taskList, newTask]\r\n        setTaskList(updatedTaskList)\r\n    }\r\n\r\n    const updateTask = (updTask, id) => {\r\n        if (id < 0) { // should not happen but in case\r\n            console.log(\"ERROR: task to be updated does not exists\")\r\n            return }\r\n        if (updTask.end > new Date())  // expected to be so but just in case\r\n            updTask.status = \"Open\"\r\n        updTask.id = id\r\n        let updatedTaskList = taskList.filter(task => task.id !== id)\r\n        updatedTaskList = [...updatedTaskList, updTask]\r\n        setTaskList(updatedTaskList)\r\n    }\r\n\r\n    const taskDefaults = {\r\n        taskDetails: \"\",\r\n        startDate: null,\r\n        startTime: \"08:00\",\r\n        endDate: null,\r\n        endTime: \"20:00\"\r\n    }\r\n\r\n    const [showAddDialog, setShowAddDialog] = React.useState(false);\r\n    const [taskType, setTaskType] = React.useState(null);\r\n    const [newTaskDefaults, setNewTaskDefaults] = React.useState(taskDefaults)\r\n    const [updTaskId, setUpdTaskId] = React.useState(-1)\r\n\r\n    const handleClickOpen = (e, taskType) => {\r\n        setTaskType(taskType)\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setTaskType(null)\r\n        setShowAddDialog(false)\r\n        setNewTaskDefaults(taskDefaults)\r\n        setUpdTaskId(-1)\r\n    }\r\n\r\n    const handleCopy = id => {\r\n        const taskToCopy = taskList.find(task => task.id === id)\r\n        setTaskType(taskToCopy.taskType)\r\n        setNewTaskDefaults({\r\n            ...newTaskDefaults,\r\n            taskDetails: taskToCopy.taskDetails,\r\n        })\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleEdit = id => {\r\n        const taskToEdit = taskList.find(task => task.id === id)\r\n        setTaskType(taskToEdit.taskType)\r\n        setNewTaskDefaults({\r\n            ...newTaskDefaults,\r\n            taskDetails: taskToEdit.taskDetails,\r\n        })\r\n        setUpdTaskId(id)\r\n        setShowAddDialog(true)\r\n    }\r\n\r\n    const handleRemove = id => {\r\n        const copyTaskList = [...taskList]\r\n        let taskToCancel = copyTaskList.find(task => task.id === id)\r\n        taskToCancel.status = \"Cancelled\"\r\n        setTaskList(copyTaskList)\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return <div className=\"centered\">\r\n\r\n        <h1>I need help with...</h1>\r\n\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Shopping\")}>\r\n            <ShoppingCartIcon className={classes.largeIcon} />\r\n            Shopping\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Pharmacy\")}>\r\n            <LocalPharmacyIcon className={classes.largeIcon} />\r\n            Pharmacy\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Dog Walking\")}>\r\n            <PetsIcon className={classes.largeIcon} />\r\n            Dog Walk\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Hospital\")}>\r\n            <LocalHospitalIcon className={classes.largeIcon} />\r\n            Hospital\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Chat\")}>\r\n            <PhoneIcon className={classes.largeIcon} />\r\n            Chat\r\n        </Button>\r\n        <Button classes={{ root: classes.largeButton, label: classes.label }}\r\n            onClick={(e) => handleClickOpen(e, \"Other\")}>\r\n            <LiveHelpIcon className={classes.largeIcon} />\r\n            Other\r\n        </Button>\r\n\r\n        <NewTaskForm open={showAddDialog} handleClose={handleClose} taskType={taskType}\r\n            addTask={addTask} defaultValues={newTaskDefaults} updateTask={updateTask} updTaskId={updTaskId} />\r\n\r\n        <TasksTable taskList={taskList} handleCopy={handleCopy}\r\n            handleEdit={handleEdit} handleRemove={handleRemove} />\r\n    </div>\r\n}\r\n\r\nexport default AddTask","/* eslint-disable no-extend-native */\r\n\r\n\r\nexport default function intialTasks() {\r\n\r\n    Date.prototype.addHours= function(h){\r\n        this.setHours(this.getHours()+h);\r\n        return this;\r\n    }\r\n     \r\n const tList = [\r\n    {\r\n        id: 1,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Tesco\",\r\n        start: new Date().addHours(2),\r\n        end: new Date().addHours(4),\r\n        status: \"Cancelled\",\r\n    },\r\n    {\r\n        id: 2,\r\n        taskType: \"Dog Walking\",\r\n        taskDetails: \"I need help with dog walkingevery morning and afternoon\",\r\n        start: new Date().addHours(5),\r\n        end: new Date().addHours(10),\r\n        status: \"Open\",\r\n    },\r\n    {\r\n        id: 3,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Asda\",\r\n        start: new Date().addHours(20),\r\n        end: new Date().addHours(24),\r\n        status: \"Assigned\",\r\n    },\r\n    {\r\n        id: 4,\r\n        taskType: \"Pharmacy\",\r\n        taskDetails: \"I need help with picking up my prescription from local gp\",\r\n        start: new Date().addHours(-20),\r\n        end: new Date().addHours(-16),\r\n        status: \"Expired\",\r\n    },\r\n    {\r\n        id: 5,\r\n        taskType: \"Hospital\",\r\n        taskDetails: \"I need help to drop off and pick up from my hospital\",\r\n        start: new Date().addHours(-100),\r\n        end: new Date().addHours(-80),\r\n        status: \"Completed\",\r\n    },\r\n    {\r\n        id: 6,\r\n        taskType: \"Phone Call\",\r\n        taskDetails: \"I need someone to give me a call to have a chat\",\r\n        start: new Date().addHours(20),\r\n        end: new Date().addHours(40),\r\n        status: \"Open\",\r\n    },\r\n    // {\r\n    //     id: 7,\r\n    //     taskType: \"Shopping\",\r\n    //     taskDetails: \"I need help with Shopping from Tesco\",\r\n    //     start: new Date().addHours(70),\r\n    //     end: new Date().addHours(74),\r\n    //     status: \"Assigned\",\r\n    // },\r\n    {\r\n        id: 8,\r\n        taskType: \"Other\",\r\n        taskDetails: \"I need help with mowing my garden\",\r\n        start: new Date().addHours(-5),\r\n        end: new Date().addHours(4),\r\n        status: \"Open\",\r\n    },\r\n    {\r\n        id: 9,\r\n        taskType: \"Shopping\",\r\n        taskDetails: \"I need help with Shopping from Sainsbuyrys\",\r\n        start: new Date(2020, 11, 10, 10),\r\n        end: new Date(2020, 11, 10, 16),\r\n        status: \"Expired\",\r\n    },\r\n    // {\r\n    //     id: 10,\r\n    //     taskType: \"Medical\",\r\n    //     taskDetails: \"I need help with picking up my prescription\",\r\n    //     start: new Date().addHours(2),\r\n    //     end: new Date().addHours(4),\r\n    //     status: \"done\",\r\n    // },\r\n]\r\nreturn tList\r\n}","import VolunteerSearchTask from \"./VolunteerSearchTask\";\r\n\r\nconst VolunteerWelcome = () => {\r\n  return (\r\n    <div>\r\n      <VolunteerSearchTask />        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolunteerWelcome;\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n          console.log(currentUser)\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/\" />\r\n        \r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AppNavBar from \"./components/structure/AppNavBar\"\r\nimport Landing from \"./components/landing/Landing\"\r\nimport Legal from \"./components/landing/Legal\"\r\nimport Cookie from \"./components/landing/Cookie\"\r\nimport Support from \"./components/landing/Support\"\r\nimport TermConditions from \"./components/landing/TermConditions\"\r\nimport About from \"./components/landing/About\"\r\nimport Contact from \"./components/landing/Contact\"\r\nimport Footer from \"./components/structure/Footer\"\r\nimport SignIn from \"./components/login/SignIn\"\r\nimport SignUp from \"./components/login/SignUp\"\r\nimport Profile from \"./components/login/Profile\"\r\nimport ForgotPassword from \"./components/login/ForgotPassword\"\r\nimport RegistrationPage  from \"./components/registrationPage/RegistrationPage\"\r\nimport VolunteerSearchTask from \"./components/volunteerTask/VolunteerSearchTask\"\r\nimport AddTask from \"./components/task/AddTask\"\r\nimport VolunteerWelcome from \"./components/volunteerTask/VolunteerWelcomePage\"\r\nimport { BrowserRouter as Router,  Route, Switch } from \"react-router-dom\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport PrivateRoute from \"./components/PrivateRoute\"\r\n\r\nfunction App() {\r\n    \r\n    return (\r\n        \r\n        <Router>\r\n            <AuthProvider>\r\n            <div className=\"App\">\r\n                <AppNavBar />\r\n                <div className=\"AppContent\">\r\n                <Switch>\r\n                <Route exact path=\"/HelpWhoNeeds/\">\r\n                    <Landing />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>\r\n                <Route path=\"/login/:userType\">\r\n                    <SignIn />\r\n                </Route>  \r\n                <Route path=\"/signUp/:user\">\r\n                    <SignUp />\r\n                </Route>  \r\n                <Route path=\"/forgotPassword/:user\">\r\n                    <ForgotPassword />\r\n                </Route>    \r\n                <Route path=\"/legal\">\r\n                    <Legal />\r\n                </Route>    \r\n                <Route path=\"/support\">\r\n                    <Support />\r\n                </Route>    \r\n                <Route path=\"/cookie\">\r\n                    <Cookie />\r\n                </Route>\r\n                <Route path=\"/contact\">\r\n                    <Contact />\r\n                </Route>    \r\n                <Route path=\"/termconditions\">\r\n                    <TermConditions />\r\n                </Route>    \r\n                 \r\n                <Route path=\"/requestee/tasks\">\r\n                    <AddTask />\r\n                </Route>  \r\n                <PrivateRoute path=\"/profile\" component= {Profile} /> \r\n                <PrivateRoute path=\"/registrationPage/:user\" component= {RegistrationPage} />\r\n                <PrivateRoute path=\"/searchTask\" component= {VolunteerSearchTask} />\r\n                <PrivateRoute path=\"/myTask\" component= {VolunteerWelcome} />\r\n                <PrivateRoute path=\"/addTask\" component= {AddTask} />\r\n                </Switch>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n            </AuthProvider>\r\n        </Router>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}